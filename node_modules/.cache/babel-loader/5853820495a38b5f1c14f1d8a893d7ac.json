{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\Counters.js\";\nimport React, { Component } from \"react\";\nimport Counter from \"./Counter\";\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    _classCallCheck(this, Counters);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Counters).apply(this, arguments));\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onReset = _this$props.onReset,\n          counters = _this$props.counters,\n          onDelete = _this$props.onDelete,\n          onIncrement = _this$props.onIncrement,\n          onDecrement = _this$props.onDecrement,\n          onDeleteAll = _this$props.onDeleteAll,\n          onLiked = _this$props.onLiked; //they have an this props in front of them object deconstructing\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"fontify btn btn-info m-2\",\n        onClick: this.props.onAdd,\n        disabled: counters.length === 7 ? \"disabled\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"button\", {\n        className: \"fontify btn btn-info m-2\",\n        onClick: onDeleteAll,\n        disabled: counters.length === 0 ? \"disabled\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"fontify btn btn-info m-2\",\n        onClick: onReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Reset\"), counters.map(function (counter) {\n        return React.createElement(Counter, {\n          key: counter.id\n          /*\r\n          val={counter.value}\r\n          id={counter.id} it like passing all of it at once*/\n          ,\n          counter: counter,\n          onDelete: onDelete,\n          onIncrement: onIncrement,\n          onDecrement: onDecrement,\n          onLiked: onLiked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Counters;\n}(Component);\n/*const map_counter = counter => {\r\n  return (\r\n    <Counter key={counter.id} val={counter.value} onDelete={this.handleDelete} >\r\n    </Counter>\r\n  );\r\n};*/\n\n\nexport { Counters as default };","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\Counters.js"],"names":["React","Component","Counter","Counters","props","onReset","counters","onDelete","onIncrement","onDecrement","onDeleteAll","onLiked","onAdd","length","map","counter","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEqBC,Q;;;;;;;;;;;;;6BACV;AAAA,wBASH,KAAKC,KATF;AAAA,UAELC,OAFK,eAELA,OAFK;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,WALK,eAKLA,WALK;AAAA,UAMLC,WANK,eAMLA,WANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAAA,UAQLC,OARK,eAQLA,OARK,EAUP;;AACA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,KAAjE;AAAwE,QAAA,QAAQ,EAAEN,QAAQ,CAACO,MAAT,KAAkB,CAAlB,GAAoB,UAApB,GAA+B,EAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAEH,WAAtD;AAAmE,QAAA,QAAQ,EAAEJ,QAAQ,CAACO,MAAT,KAAkB,CAAlB,GAAoB,UAApB,GAA+B,EAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAOE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAER,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAWGC,QAAQ,CAACQ,GAAT,CAAa,UAAAC,OAAO,EAAI;AACvB,eACE,oBAAC,OAAD;AACE,UAAA,GAAG,EAAEA,OAAO,CAACC;AACb;;;AAFF;AAKE,UAAA,OAAO,EAAED,OALX;AAME,UAAA,QAAQ,EAAER,QANZ;AAOE,UAAA,WAAW,EAAEC,WAPf;AAQE,UAAA,WAAW,EAAEC,WARf;AASE,UAAA,OAAO,EAAEE,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,OAdA,CAXH,CADF;AA6BD;;;;EAzCmCV,S;AA4CtC;;;;;;;;SA5CqBE,Q","sourcesContent":["import React, { Component } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nexport default class Counters extends Component {\r\n  render() {\r\n    const {\r\n      onReset,\r\n      counters,\r\n      onDelete,\r\n      onIncrement,\r\n      onDecrement,\r\n      onDeleteAll,\r\n      onLiked\r\n    } = this.props;\r\n    //they have an this props in front of them object deconstructing\r\n    return (\r\n      <React.Fragment>\r\n        <button className=\"fontify btn btn-info m-2\" onClick={this.props.onAdd} disabled={counters.length===7?\"disabled\":\"\"}>\r\n          Add\r\n        </button>\r\n        <button className=\"fontify btn btn-info m-2\" onClick={onDeleteAll} disabled={counters.length===0?\"disabled\":\"\"}>\r\n          Delete\r\n        </button>\r\n        <button className=\"fontify btn btn-info m-2\" onClick={onReset}>\r\n          Reset\r\n        </button>\r\n\r\n        {counters.map(counter => {\r\n          return (\r\n            <Counter\r\n              key={counter.id}\r\n              /*\r\n              val={counter.value}\r\n              id={counter.id} it like passing all of it at once*/\r\n              counter={counter}\r\n              onDelete={onDelete}\r\n              onIncrement={onIncrement}\r\n              onDecrement={onDecrement}\r\n              onLiked={onLiked}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n/*const map_counter = counter => {\r\n  return (\r\n    <Counter key={counter.id} val={counter.value} onDelete={this.handleDelete} >\r\n    </Counter>\r\n  );\r\n};*/\r\n"]},"metadata":{},"sourceType":"module"}