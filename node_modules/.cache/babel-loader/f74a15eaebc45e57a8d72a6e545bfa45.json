{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams(); //in the action creator which will give us an array of fetched data\n    }\n  }, {\n    key: \"renderAdminB\",\n    value: function renderAdminB(stream) {\n      //console.log(\"this.props\",this.props.currentUserId);\n      if (stream.userId === this.props.currentUserId) return React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger btn-lg m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"btn btn-dark btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Edit\"));\n    }\n  }, {\n    key: \"renderStream\",\n    value: function renderStream() {\n      var _this = this;\n\n      var streams = this.props.streams;\n      return streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, _this.renderAdminB(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, stream.description)));\n      });\n    }\n  }, {\n    key: \"renderCreateStreamB\",\n    value: function renderCreateStreamB() {\n      if (this.props.isSignedIn) {\n        return React.createElement(\"button\", {\n          className: \"btn btn-dark btn-lg m-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"streams/new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Create Stream\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"ui celled list col-6 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.renderStream()), this.renderCreateStreamB());\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    streams: Object.values(state.STreams),\n    //converting the object to array\n    currentUserId: state.authReducer.userId,\n    isSignedIn: state.authReducer.isSignedIn\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","props","stream","userId","currentUserId","streams","map","id","renderAdminB","title","description","isSignedIn","renderStream","renderCreateStreamB","Component","mapStatetoProps","state","Object","values","STreams","authReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;IAEMC,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWH,YAAX,GADkB,CACS;AAC5B;;;iCACYI,M,EAAQ;AACnB;AACA,UAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAjC,EACE,OACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMH;;;mCACc;AAAA;;AAAA,UACLC,OADK,GACO,KAAKJ,KADZ,CACLI,OADK;AAEb,aAAOA,OAAO,CAACC,GAAR,CAAY,UAAAJ,MAAM,EAAI;AAC3B,eACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAI,CAACC,YAAL,CAAkBN,MAAlB,CADH,EAEE;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,MAAM,CAACO,KADV,EAEE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BP,MAAM,CAACQ,WAArC,CAFF,CAHF,CADF;AAUD,OAXM,CAAP;AAYD;;;0CACqB;AACpB,UAAI,KAAKT,KAAL,CAAWU,UAAf,EAA2B;AACvB,eAAO;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4C,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA5C,CAAP;AACH;AACF;;;6BAEQ;AACP,aACE,0CACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC,KAAKC,YAAL,EAAxC,CADF,EAEK,KAAKC,mBAAL,EAFL,CADF;AAMD;;;;EA1CsBjB,KAAK,CAACkB,S;;AA4C/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLX,IAAAA,OAAO,EAAEY,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,OAApB,CADJ;AACkC;AACvCf,IAAAA,aAAa,EAAEY,KAAK,CAACI,WAAN,CAAkBjB,MAF5B;AAGLQ,IAAAA,UAAU,EAAEK,KAAK,CAACI,WAAN,CAAkBT;AAHzB,GAAP;AAKD,CAND;;AAOA,eAAed,OAAO,CACpBkB,eADoB,EAEpB;AAAEjB,EAAAA,YAAY,EAAZA;AAAF,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStreams } from \"../../actions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass StreamList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStreams(); //in the action creator which will give us an array of fetched data\r\n  }\r\n  renderAdminB(stream) {\r\n    //console.log(\"this.props\",this.props.currentUserId);\r\n    if (stream.userId === this.props.currentUserId)\r\n      return (\r\n        <div className=\"right floated content\">\r\n          <button className=\"btn btn-danger btn-lg m-1\">Delete</button>\r\n          <button className=\"btn btn-dark btn-lg\">Edit</button>\r\n        </div>\r\n      );\r\n  }\r\n  renderStream() {\r\n    const { streams } = this.props;\r\n    return streams.map(stream => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n          {this.renderAdminB(stream)}\r\n          <i className=\"large middle aligned icon camera\" />\r\n          <div className=\"content\">\r\n            {stream.title}\r\n            <div className=\"description\">{stream.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  renderCreateStreamB() {\r\n    if (this.props.isSignedIn) {\r\n        return <button className=\"btn btn-dark btn-lg m-5\"><Link to=\"streams/new\">Create Stream</Link></button>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"ui celled list col-6 \">{this.renderStream()}</div>\r\n          {this.renderCreateStreamB()}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    streams: Object.values(state.STreams), //converting the object to array\r\n    currentUserId: state.authReducer.userId,\r\n    isSignedIn: state.authReducer.isSignedIn\r\n  };\r\n};\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { fetchStreams }\r\n)(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}