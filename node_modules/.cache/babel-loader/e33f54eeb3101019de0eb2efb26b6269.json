{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\StreamEdit.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamEdit, _Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.omSubmit = function (formValues) {\n      console.log(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this component fetchStream works for local state\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props);\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        className: \"backk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Edit Stream\"), React.createElement(StreamForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  //console.log(state);\n  return {\n    SelectedStream: state.STreams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\StreamEdit.js"],"names":["React","Component","connect","fetchStream","editStream","StreamForm","StreamEdit","omSubmit","formValues","console","log","props","match","params","id","mapStateToProps","state","ownProps","SelectedStream","STreams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;;UAKNC,Q,GAAW,UAACC,UAAD,EAAe;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,K;;;;;;;wCANqB;AAClB;AACA,WAAKG,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;;6BAIQ;AACP;AACA,aACE,0CACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAhBsBb,S;;AAkBzB,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C;AACA,SAAO;AACLC,IAAAA,cAAc,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACL,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADX,GAAP;AAGD,CALD;;AAMA,eAAeZ,OAAO,CACpBa,eADoB,EAEpB;AAAEZ,EAAAA,WAAW,EAAXA;AAAF,CAFoB,CAAP,CAGbG,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream, editStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamEdit extends Component {\r\n  componentDidMount() {\r\n    //this component fetchStream works for local state\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\nomSubmit = (formValues) =>{\r\n  console.log(formValues)\r\n};\r\n  render() {\r\n    //console.log(this.props);\r\n    return (\r\n      <>\r\n        <h3 className=\"backk\">Edit Stream</h3>\r\n        <StreamForm />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  //console.log(state);\r\n  return {\r\n    SelectedStream: state.STreams[ownProps.match.params.id]\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchStream }\r\n)(StreamEdit);\r\n"]},"metadata":{},"sourceType":"module"}