{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\StreamCreate.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Joi from \"joi-browser\";\nimport createValidator from \"../../Validate/myValidation\";\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamCreate, _Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderinput = function (formProps) {\n      console.log(formProps.meta);\n      var input = formProps.input,\n          label = formProps.label,\n          meta = formProps.meta;\n      return React.createElement(\"div\", {\n        className: \"form-group m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: \"text\",\n        className: \"form-control\",\n        id: label,\n        placeholder: label,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })), meta.touched && meta.error && //just like mosh but check the differnce between boolean object true and falsy something\n      React.createElement(\"span\", {\n        className: \"badge badge-danger badge-pill d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, meta.error));\n    };\n\n    _this.onSumbit = function (formValues) {//  console.log(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props);\n      return React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSumbit),\n        className: \"col-5 form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        label: \"Title\",\n        component: this.renderinput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        label: \"description\",\n        component: this.renderinput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamCreate;\n}(Component);\n\nvar schema = {\n  title: Joi.string().required().alphanum().min(5).label(\"Title\"),\n  description: Joi.string().required().min(5).label(\"Descrption\")\n};\nexport default reduxForm({\n  form: \"StreamCreate\",\n  validate: createValidator(schema)\n})(StreamCreate);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\StreamCreate.js"],"names":["React","Component","Field","reduxForm","Joi","createValidator","StreamCreate","renderinput","formProps","console","log","meta","input","label","touched","error","onSumbit","formValues","props","handleSubmit","schema","title","string","required","alphanum","min","description","form","validate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;IAEMC,Y;;;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAAAC,SAAS,EAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAtB;AADyB,UAEjBC,KAFiB,GAEKJ,SAFL,CAEjBI,KAFiB;AAAA,UAEVC,KAFU,GAEKL,SAFL,CAEVK,KAFU;AAAA,UAEHF,IAFG,GAEKH,SAFL,CAEHG,IAFG;AAGzB,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQE,KAAR,CADF,EAEE,+CACMD,KADN;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,EAAE,EAAEC,KAJN;AAKE,QAAA,WAAW,EAAEA,KALf;AAME,QAAA,YAAY,EAAC,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAUGF,IAAI,CAACG,OAAL,IAAcH,IAAI,CAACI,KAAnB,IAA2B;AAC5B;AAAM,QAAA,SAAS,EAAC,8CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgEJ,IAAI,CAACI,KAArE,CAXF,CADF;AAeD,K;;UAEDC,Q,GAAW,UAAAC,UAAU,EAAI,CACvB;AACD,K;;;;;;;6BACQ;AACP;AACA,aACE;AACE,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CADZ;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAkC,QAAA,SAAS,EAAE,KAAKT,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,SAAS,EAAE,KAAKA,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAUE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CADF;AAgBD;;;;EA1CwBN,S;;AA6C3B,IAAMmB,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAEjB,GAAG,CAACkB,MAAJ,GACJC,QADI,GAEJC,QAFI,GAGJC,GAHI,CAGA,CAHA,EAIJZ,KAJI,CAIE,OAJF,CADM;AAMba,EAAAA,WAAW,EAAEtB,GAAG,CAACkB,MAAJ,GACVC,QADU,GAEVE,GAFU,CAEN,CAFM,EAGVZ,KAHU,CAGJ,YAHI;AANA,CAAf;AAYA,eAAeV,SAAS,CAAC;AACvBwB,EAAAA,IAAI,EAAE,cADiB;AAEvBC,EAAAA,QAAQ,EAAEvB,eAAe,CAACe,MAAD;AAFF,CAAD,CAAT,CAGZd,YAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Joi from \"joi-browser\";\r\nimport createValidator from \"../../Validate/myValidation\";\r\n\r\nclass StreamCreate extends Component {\r\n  renderinput = formProps => {\r\n    console.log(formProps.meta);\r\n    const { input, label ,meta} = formProps;\r\n    return (\r\n      <div className=\"form-group m-2\">\r\n        <label>{label}</label>\r\n        <input\r\n          {...input}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id={label}\r\n          placeholder={label}\r\n          autoComplete=\"off\"\r\n        />\r\n        {meta.touched&&meta.error&& //just like mosh but check the differnce between boolean object true and falsy something\r\n        <span className=\"badge badge-danger badge-pill d-inline-block\">{meta.error}</span>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSumbit = formValues => {\r\n    //  console.log(formValues);\r\n  };\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onSumbit)}\r\n        className=\"col-5 form-group\"\r\n      >\r\n        <Field name=\"title\" label=\"Title\" component={this.renderinput} />\r\n        <Field\r\n          name=\"description\"\r\n          label=\"description\"\r\n          component={this.renderinput}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-dark btn-sm m-2\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst schema = {\r\n  title: Joi.string()\r\n    .required()\r\n    .alphanum()\r\n    .min(5)\r\n    .label(\"Title\"),\r\n  description: Joi.string()\r\n    .required()\r\n    .min(5)\r\n    .label(\"Descrption\")\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"StreamCreate\",\r\n  validate: createValidator(schema)\r\n})(StreamCreate);\r\n"]},"metadata":{},"sourceType":"module"}