{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nimport { CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"../actions/types\"; //because in our state every stream has it specific key so deleting a that key means deleting that stream\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_STREAMS:\n      {\n        return _objectSpread({}, state, _.mapKeys(action.payload, 'id'));\n      }\n\n    case FETCH_STREAM:\n      {\n        return _objectSpread({}, state, _defineProperty({}, action.payload.id, action.payload));\n      }\n\n    case CREATE_STREAM:\n      {\n        return _objectSpread({}, state, _defineProperty({}, action.payload.id, action.payload));\n      }\n\n    case EDIT_STREAM:\n      {\n        return _objectSpread({}, state, _defineProperty({}, action.payload.id, action.payload));\n      }\n\n    case DELETE_STREAM:\n      {\n        return _.omit(state, action.payload);\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\reducers\\streamReducer.js"],"names":["_","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","state","action","type","mapKeys","payload","id","omit"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,WALF,QAMO,kBANP,C,CAQA;;AACA,gBAAe,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AAAmB;AACjB,iCAAWI,KAAX,EAAoBN,CAAC,CAACS,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAAyB,IAAzB,CAApB;AACD;;AACD,SAAKP,YAAL;AAAmB;AACjB,iCAAYG,KAAZ,sBAAoBC,MAAM,CAACG,OAAP,CAAeC,EAAnC,EAAwCJ,MAAM,CAACG,OAA/C;AACD;;AACD,SAAKT,aAAL;AAAoB;AAClB,iCAAYK,KAAZ,sBAAoBC,MAAM,CAACG,OAAP,CAAeC,EAAnC,EAAwCJ,MAAM,CAACG,OAA/C;AACD;;AACD,SAAKL,WAAL;AAAkB;AAChB,iCAAYC,KAAZ,sBAAoBC,MAAM,CAACG,OAAP,CAAeC,EAAnC,EAAwCJ,MAAM,CAACG,OAA/C;AACD;;AACD,SAAKN,aAAL;AAAoB;AACnB,eAAOJ,CAAC,CAACY,IAAF,CAAON,KAAP,EAAaC,MAAM,CAACG,OAApB,CAAP;AACA;;AACD;AACE,aAAOJ,KAAP;AAjBJ;AAmBD,CApBD","sourcesContent":["import _ from 'lodash'\r\nimport {\r\n  CREATE_STREAM,\r\n  FETCH_STREAMS,\r\n  FETCH_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from \"../actions/types\";\r\n\r\n//because in our state every stream has it specific key so deleting a that key means deleting that stream\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STREAMS:{\r\n      return {...state,..._.mapKeys(action.payload,'id')}\r\n    }\r\n    case FETCH_STREAM: {\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    }\r\n    case CREATE_STREAM: {\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    }\r\n    case EDIT_STREAM: {\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    }\r\n    case DELETE_STREAM: {\r\n     return _.omit(state,action.payload)\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}