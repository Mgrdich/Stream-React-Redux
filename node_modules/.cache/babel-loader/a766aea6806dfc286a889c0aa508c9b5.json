{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\Movies.js\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./pagination\";\nimport ListGroup from \"./ListGroup\";\nimport MoviesTable from \"./MoviesTable\";\nimport _ from \"lodash\";\nimport { paginate } from \"../utility/paginate\";\nimport { Link } from \"react-router-dom\";\nimport Searchbox from \"./Searchbox\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      //not the right way by the way\n      genres: [],\n      PageSize: 4,\n      currentpage: 1,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      },\n      search: \"\"\n    };\n\n    _this.getPageData = function () {\n      var _this$state = _this.state,\n          selectedGenre = _this$state.selectedGenre,\n          allMovies = _this$state.movies,\n          currentpage = _this$state.currentpage,\n          PageSize = _this$state.PageSize,\n          sortColumn = _this$state.sortColumn,\n          search = _this$state.search;\n      var filtered_movies = selectedGenre && selectedGenre._id ? allMovies.filter(function (m) {\n        return m.genre._id === selectedGenre._id;\n      }) : allMovies;\n\n      var sorted = _.orderBy(filtered_movies, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sorted, currentpage, PageSize);\n      return {\n        movies: movies,\n        SomeLength: filtered_movies.length\n      };\n    };\n\n    _this.handleDelete = function (the_id) {\n      var newarray = _this.state.movies.filter(function (w) {\n        return w._id !== the_id;\n      });\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handleLike = function (object) {\n      var newarray = _toConsumableArray(_this.state.movies);\n\n      var index = newarray.indexOf(object);\n      newarray[index].liked = !newarray[index].liked;\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentpage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        currentpage: 1\n      });\n    };\n\n    _this.handleSort = function (ob) {\n      _this.setState({\n        sortColumn: ob\n      });\n    };\n\n    _this.handleSearchChange = function (event) {\n      var _this$setState;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"selectedGenre\", null), _this$setState));\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = [{\n        name: \"All Genres\",\n        _id: \"\"\n      }].concat(_toConsumableArray(getGenres()));\n      this.setState({\n        movies: getMovies(),\n        genres: genres\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var regular = new RegExp(this.state.search, 'i');\n      var RegMov = this.state.movies.filter(function (m) {\n        return !m.title.search(regular);\n      });\n      console.log(RegMov);\n      var _this$state2 = this.state,\n          currentpage = _this$state2.currentpage,\n          PageSize = _this$state2.PageSize,\n          sortColumn = _this$state2.sortColumn,\n          search = _this$state2.search;\n\n      var _this$getPageData = this.getPageData(),\n          movies = _this$getPageData.movies,\n          SomeLength = _this$getPageData.SomeLength;\n\n      if (SomeLength === 0) return React.createElement(\"h1\", {\n        className: \"fontify badge badge-pill badge-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"no more movies in Database\");else return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: this.state.genres,\n        onItemSelect: this.handleGenreSelect,\n        selectedItem: this.state.selectedGenre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"fontify alert  alert-info d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Showing \", React.createElement(\"span\", {\n        className: \"badge badge-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, SomeLength), \" \", \"movies in Database\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/movies/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm fontify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"New Movie\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Searchbox, {\n        onChange: this.handleSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), search === \"\" ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(MoviesTable, {\n        movies: movies,\n        handleDelete: this.handleDelete,\n        handleLike: this.handleLike,\n        onSort: this.handleSort,\n        sortColumn: sortColumn,\n        onLike: this.handleLike,\n        onDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: SomeLength,\n        PageSize: PageSize,\n        onPageChange: this.handlePageChange,\n        currentPage: currentpage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })) : React.createElement(MoviesTable, {\n        movies: RegMov,\n        handleDelete: this.handleDelete,\n        handleLike: this.handleLike,\n        onSort: this.handleSort,\n        sortColumn: sortColumn,\n        onLike: this.handleLike,\n        onDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\Movies.js"],"names":["React","Component","getMovies","getGenres","Pagination","ListGroup","MoviesTable","_","paginate","Link","Searchbox","Movies","state","movies","genres","PageSize","currentpage","sortColumn","path","order","search","getPageData","selectedGenre","allMovies","filtered_movies","_id","filter","m","genre","sorted","orderBy","SomeLength","length","handleDelete","the_id","newarray","w","setState","handleLike","object","index","indexOf","liked","handlePageChange","page","handleGenreSelect","handleSort","ob","handleSearchChange","event","target","name","value","regular","RegExp","RegMov","title","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Pagination from \"./pagination\";\r\nimport ListGroup from \"./ListGroup\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport _ from \"lodash\";\r\nimport { paginate } from \"../utility/paginate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Searchbox from \"./Searchbox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [], //not the right way by the way\r\n    genres: [],\r\n    PageSize: 4,\r\n    currentpage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    search: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres: genres });\r\n  }\r\n  getPageData = () => {\r\n    const {\r\n      selectedGenre,\r\n      movies: allMovies,\r\n      currentpage,\r\n      PageSize,\r\n      sortColumn,\r\n        search\r\n    } = this.state;\r\n\r\n    const filtered_movies =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n        : allMovies;\r\n\r\n    const sorted = _.orderBy(\r\n      filtered_movies,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    const movies = paginate(sorted, currentpage, PageSize);\r\n    return { movies, SomeLength: filtered_movies.length };\r\n\r\n  };\r\n\r\n  render() {\r\n    let regular=new RegExp(this.state.search,'i');\r\n\r\n    const  RegMov=this.state.movies.filter(\r\n        (m)=> (!m.title.search(regular))\r\n    );\r\n    console.log(RegMov);\r\n\r\n    const { currentpage, PageSize, sortColumn,search} = this.state;\r\n\r\n    const { movies, SomeLength } = this.getPageData();\r\n\r\n    if (SomeLength === 0)\r\n      return (\r\n        <h1 className=\"fontify badge badge-pill badge-danger\">\r\n          no more movies in Database\r\n        </h1>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <ListGroup\r\n              items={this.state.genres}\r\n              onItemSelect={this.handleGenreSelect}\r\n              selectedItem={this.state.selectedGenre}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <br />\r\n            <span className=\"fontify alert  alert-info d-inline-block\">\r\n              Showing <span className=\"badge badge-light\">{SomeLength}</span>{\" \"}\r\n              movies in Database\r\n            </span>\r\n            <br />\r\n            <Link to=\"/movies/new\">\r\n              <button className=\"btn btn-primary btn-sm fontify\">\r\n                New Movie\r\n              </button>\r\n            </Link>\r\n            <br />\r\n\r\n            <Searchbox onChange={this.handleSearchChange} />\r\n            <br />\r\n            {\r\n              (search===\"\") ?(<React.Fragment><MoviesTable\r\n              movies={movies}\r\n              handleDelete={this.handleDelete}\r\n              handleLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              />\r\n              <Pagination\r\n              itemsCount={SomeLength}\r\n              PageSize={PageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentpage}\r\n              /></React.Fragment>):(\r\n            <MoviesTable\r\n              movies={RegMov}\r\n              handleDelete={this.handleDelete}\r\n              handleLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n            />)\r\n\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  handleDelete = the_id => {\r\n    const newarray = this.state.movies.filter(w => {\r\n      return w._id !== the_id;\r\n    });\r\n    this.setState({ movies: newarray });\r\n  };\r\n\r\n  handleLike = object => {\r\n    const newarray = [...this.state.movies];\r\n    let index = newarray.indexOf(object);\r\n    newarray[index].liked = !newarray[index].liked;\r\n    this.setState({ movies: newarray });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentpage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentpage: 1 });\r\n  };\r\n\r\n  handleSort = ob => {\r\n    this.setState({ sortColumn: ob });\r\n  };\r\n  handleSearchChange = (event) => {\r\n    const {name,value}=event.target;\r\n    this.setState({[name]:value,selectedGenre:null});\r\n  };\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}