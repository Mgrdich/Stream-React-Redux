{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\TableHead.js\";\nimport React, { Component } from \"react\";\n\nvar TableHead =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableHead, _Component);\n\n  function TableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.raiseSort = function (path) {\n      var ob = _objectSpread({}, _this.props.sortColumn);\n\n      if (ob.path === path) ob.order = ob.order === \"asc\" ? \"desc\" : \"asc\";else {\n        ob.path = path;\n        ob.order = \"asc\";\n      }\n\n      _this.props.onSort(ob); //do not forget this function\n\n    };\n\n    _this.renderSortIcon = function (column) {\n      var sortColumn = _this.props.sortColumn;\n      if (column.path !== sortColumn.path) return null;\n      if (sortColumn.order === 'asc') return React.createElement(\"i\", {\n        className: \"fal fa-angle-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });else return React.createElement(\"i\", {\n        className: \"fal fa-angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"thead\", {\n        className: \"table-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.columns.map(function (column) {\n        return React.createElement(\"th\", {\n          className: \"fontifyr cur\",\n          key: column.path || column.key,\n          onClick: function onClick() {\n            return _this2.raiseSort(column.path);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, column.label, _this2.renderSortIcon(column));\n      })));\n    }\n  }]);\n\n  return TableHead;\n}(Component);\n\nexport default TableHead;\n/*const TableHead = props => { //this was my way\r\n  const { SomeSort } = props;\r\n  return (\r\n    <thead className=\"table-dark\">\r\n      <tr>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"title\")}>\r\n          Title\r\n        </th>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"genre.name\")}>\r\n          Genre\r\n        </th>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"numberInStock\")}>\r\n          Stock\r\n        </th>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"dailyRentalRate\")}>\r\n          Rate\r\n        </th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n  );\r\n};*/","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\TableHead.js"],"names":["React","Component","TableHead","raiseSort","path","ob","props","sortColumn","order","onSort","renderSortIcon","column","columns","map","key","label"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;;;;;;;;;;;;;;UAEJC,S,GAAY,UAAAC,IAAI,EAAI;AAClB,UAAMC,EAAE,qBAAQ,MAAKC,KAAL,CAAWC,UAAnB,CAAR;;AACA,UAAIF,EAAE,CAACD,IAAH,KAAYA,IAAhB,EAAsBC,EAAE,CAACG,KAAH,GAAYH,EAAE,CAACG,KAAH,KAAa,KAAd,GAAuB,MAAvB,GAAgC,KAA3C,CAAtB,KACK;AACHH,QAAAA,EAAE,CAACD,IAAH,GAAUA,IAAV;AACAC,QAAAA,EAAE,CAACG,KAAH,GAAW,KAAX;AACD;;AACD,YAAKF,KAAL,CAAWG,MAAX,CAAkBJ,EAAlB,EAPkB,CAOK;;AAExB,K;;UAEHK,c,GAAe,UAACC,MAAD,EAAU;AAAA,UAChBJ,UADgB,GACJ,MAAKD,KADD,CAChBC,UADgB;AAEzB,UAAGI,MAAM,CAACP,IAAP,KAAcG,UAAU,CAACH,IAA5B,EAAiC,OAAO,IAAP;AAC7B,UAAGG,UAAU,CAACC,KAAX,KAAmB,KAAtB,EACI,OAAO;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADJ,KAGE,OAAO;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAIL,K;;;;;;;6BAEU;AAAA;;AAEP,aACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuB,UAAAF,MAAM;AAAA,eAC1B;AACI,UAAA,SAAS,EAAC,cADd;AAEI,UAAA,GAAG,EAAEA,MAAM,CAACP,IAAP,IAAeO,MAAM,CAACG,GAF/B;AAGI,UAAA,OAAO,EAAE;AAAA,mBAAI,MAAI,CAACX,SAAL,CAAeQ,MAAM,CAACP,IAAtB,CAAJ;AAAA,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIEO,MAAM,CAACI,KAJT,EAIgB,MAAI,CAACL,cAAL,CAAoBC,MAApB,CAJhB,CAD0B;AAAA,OAA7B,CADH,CADA,CADJ;AAaD;;;;EAxCqBV,S;;AA2CxB,eAAeC,SAAf;AAIA","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TableHead extends Component {\r\n\r\n  raiseSort = path => {\r\n    const ob = { ...this.props.sortColumn };\r\n    if (ob.path === path) ob.order = (ob.order === \"asc\") ? \"desc\" : \"asc\";\r\n    else {\r\n      ob.path = path;\r\n      ob.order = \"asc\";\r\n    }\r\n    this.props.onSort(ob); //do not forget this function\r\n\r\n  };\r\n\r\nrenderSortIcon=(column)=>{\r\n  const {sortColumn}=this.props;\r\nif(column.path!==sortColumn.path)return null;\r\n    if(sortColumn.order==='asc')\r\n        return(<i className=\"fal fa-angle-up\"></i>);\r\n    else\r\n      return(<i className=\"fal fa-angle-down\"/>);\r\n\r\n\r\n\r\n};\r\n\r\n  render() {\r\n\r\n    return (\r\n        <thead className=\"table-dark\">\r\n        <tr>\r\n          {this.props.columns.map(column=>(\r\n              <th\r\n                  className=\"fontifyr cur\"\r\n                  key={column.path || column.key}\r\n                  onClick={()=>this.raiseSort(column.path)}\r\n              >{column.label}{this.renderSortIcon(column)}</th>\r\n          ))}\r\n        </tr>\r\n        </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHead;\r\n\r\n\r\n\r\n/*const TableHead = props => { //this was my way\r\n  const { SomeSort } = props;\r\n  return (\r\n    <thead className=\"table-dark\">\r\n      <tr>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"title\")}>\r\n          Title\r\n        </th>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"genre.name\")}>\r\n          Genre\r\n        </th>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"numberInStock\")}>\r\n          Stock\r\n        </th>\r\n        <th className=\"fontifyr cur\" onClick={() => SomeSort(\"dailyRentalRate\")}>\r\n          Rate\r\n        </th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n  );\r\n};*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}