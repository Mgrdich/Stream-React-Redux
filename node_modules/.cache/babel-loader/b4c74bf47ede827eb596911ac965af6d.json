{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderStream = function () {\n      return streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"ui middle aligned divided list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        })));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams(); //in the action creator which will give us an array of fetched data\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var streams = this.props.streams;\n      console.log(streams);\n      return React.createElement(\"div\", {\n        className: \"ui middle aligned divided list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \" \")));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    streams: Object.values(state.STreams)\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","renderStream","streams","map","stream","props","console","log","Component","mapStatetoProps","state","Object","values","STreams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAINC,Y,GAAa,YAAI;AACb,aAAQC,OAAO,CAACC,GAAR,CAAa,UAAAC,MAAM,EAAG;AAC5B,eACI;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADJ;AAOD,OARO,CAAR;AASH,K;;;;;;;wCAbqB;AAClB,WAAKC,KAAL,CAAWN,YAAX,GADkB,CACS;AAC5B;;;6BAYQ;AAAA,UACCG,OADD,GACa,KAAKG,KADlB,CACCH,OADD;AAEPI,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,aACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CADJ;AAOD;;;;EAzBsBL,KAAK,CAACW,S;;AA2B/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLR,IAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,OAApB;AADJ,GAAP;AAGD,CAJD;;AAKA,eAAef,OAAO,CACpBW,eADoB,EAEpB;AAAEV,EAAAA,YAAY,EAAZA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStreams } from \"../../actions\";\r\n\r\nclass StreamList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStreams(); //in the action creator which will give us an array of fetched data\r\n  }\r\nrenderStream=()=>{\r\n    return  streams.map( stream=> {\r\n      return (\r\n          <div className=\"ui middle aligned divided list\">\r\n            <div className=\"item\">\r\n              <div className=\"title\"></div>\r\n            </div>\r\n          </div>\r\n      );\r\n    });\r\n}\r\n  render() {\r\n    const { streams } = this.props;\r\n    console.log(streams);\r\n    return (\r\n        <div className=\"ui middle aligned divided list\">\r\n          <div className=\"item\">\r\n            <div className=\"title\"> </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    streams: Object.values(state.STreams)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { fetchStreams }\r\n)(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}