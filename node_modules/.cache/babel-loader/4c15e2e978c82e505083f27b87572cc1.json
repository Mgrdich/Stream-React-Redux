{"ast":null,"code":"import { FetchText } from \"../utility/MyFetch\";\nimport axios from \"axios\";\n\nvar fs = require(\"fs\");\n\nexport default function DataScientist() {\n  var IdZero, IdOne, IdTwo, IdThree, IdFour, IdFive, IdSix, IdSeven; //IdZero = FetchText(\"/IdZero.txt\");\n  // Data which will write in a file.\n\n  var data = \"Learning how to write in a file.\"; // Write data in 'Output.txt' .\n\n  fs.writeFile(\"Output.txt\", data, function (err) {\n    console.log(data); // In case of a error throw err.\n\n    if (err) throw err;\n  });\n  return [{\n    title: \"Unknown\",\n    position: \"Notyet\",\n    description: IdZero,\n    profession: \"Scientist\",\n    id: 0\n  }, {\n    title: \"Albert Einstein\",\n    position: \"Notyet\",\n    description: IdOne,\n    profession: \"Physicist\",\n    id: 1\n  }, {\n    title: \"Stephen Hawking\",\n    position: \"Notyet\",\n    description: IdTwo,\n    profession: \"Physicist\",\n    id: 2\n  }, {\n    title: \"Leonhard Euler\",\n    position: \"Notyet\",\n    description: IdThree,\n    profession: \"Mathematician\",\n    id: 3\n  }, {\n    title: \"Archimedes\",\n    position: \"Notyet\",\n    description: IdFour,\n    profession: \"Engineer\",\n    id: 4\n  }, {\n    title: \"Galileo Galilei\",\n    position: \"Notyet\",\n    description: IdFive,\n    profession: \"Physicist\",\n    id: 5\n  }, {\n    title: \"Isaac Newton\",\n    position: \"Notyet\",\n    description: IdSix,\n    profession: \"Mathematician\",\n    id: 6\n  }, {\n    title: \"Tim Berners-Lee\",\n    position: \"Notyet\",\n    description: IdSeven,\n    profession: \"Engineer\",\n    id: 7\n  }];\n}\nexport function profession() {\n  return [{\n    profession: \"All\",\n    id: 0\n  }, {\n    profession: \"Engineer\",\n    id: 1\n  }, {\n    profession: \"Mathematician\",\n    id: 2\n  }, {\n    profession: \"Physicist\",\n    id: 3\n  }];\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\information\\DataConstants.js"],"names":["FetchText","axios","fs","require","DataScientist","IdZero","IdOne","IdTwo","IdThree","IdFour","IdFive","IdSix","IdSeven","data","writeFile","err","console","log","title","position","description","profession","id"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,MAAIC,MAAJ,EAAYC,KAAZ,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0DC,OAA1D,CADsC,CAEtC;AAGA;;AACA,MAAIC,IAAI,GAAG,kCAAX,CANsC,CAQtC;;AACAX,EAAAA,EAAE,CAACY,SAAH,CAAa,YAAb,EAA2BD,IAA3B,EAAiC,UAAAE,GAAG,EAAI;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EADsC,CAEtC;;AACA,QAAIE,GAAJ,EAAS,MAAMA,GAAN;AACV,GAJD;AAKA,SAAO,CACL;AACEG,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAEf,MAHf;AAIEgB,IAAAA,UAAU,EAAE,WAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GADK,EAQL;AACEJ,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAEd,KAHf;AAIEe,IAAAA,UAAU,EAAE,WAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GARK,EAeL;AACEJ,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAEb,KAHf;AAIEc,IAAAA,UAAU,EAAE,WAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GAfK,EAsBL;AACEJ,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAEZ,OAHf;AAIEa,IAAAA,UAAU,EAAE,eAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GAtBK,EA6BL;AACEJ,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAEX,MAHf;AAIEY,IAAAA,UAAU,EAAE,UAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GA7BK,EAoCL;AACEJ,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAEV,MAHf;AAIEW,IAAAA,UAAU,EAAE,WAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GApCK,EA2CL;AACEJ,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAET,KAHf;AAIEU,IAAAA,UAAU,EAAE,eAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GA3CK,EAkDL;AACEJ,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,WAAW,EAAER,OAHf;AAIES,IAAAA,UAAU,EAAE,UAJd;AAKEC,IAAAA,EAAE,EAAE;AALN,GAlDK,CAAP;AA0DD;AAED,OAAO,SAASD,UAAT,GAAsB;AAC3B,SAAO,CACL;AACEA,IAAAA,UAAU,EAAE,KADd;AAEEC,IAAAA,EAAE,EAAE;AAFN,GADK,EAKL;AACED,IAAAA,UAAU,EAAE,UADd;AAEEC,IAAAA,EAAE,EAAE;AAFN,GALK,EASL;AACED,IAAAA,UAAU,EAAE,eADd;AAEEC,IAAAA,EAAE,EAAE;AAFN,GATK,EAaL;AACED,IAAAA,UAAU,EAAE,WADd;AAEEC,IAAAA,EAAE,EAAE;AAFN,GAbK,CAAP;AAkBD","sourcesContent":["import { FetchText } from \"../utility/MyFetch\";\r\nimport axios from \"axios\";\r\nconst fs = require(\"fs\");\r\n\r\nexport default function DataScientist() {\r\n  let IdZero, IdOne, IdTwo, IdThree, IdFour, IdFive, IdSix, IdSeven;\r\n  //IdZero = FetchText(\"/IdZero.txt\");\r\n\r\n\r\n  // Data which will write in a file.\r\n  let data = \"Learning how to write in a file.\";\r\n\r\n  // Write data in 'Output.txt' .\r\n  fs.writeFile(\"Output.txt\", data, err => {\r\n    console.log(data);\r\n    // In case of a error throw err.\r\n    if (err) throw err;\r\n  });\r\n  return [\r\n    {\r\n      title: \"Unknown\",\r\n      position: \"Notyet\",\r\n      description: IdZero,\r\n      profession: \"Scientist\",\r\n      id: 0\r\n    },\r\n    {\r\n      title: \"Albert Einstein\",\r\n      position: \"Notyet\",\r\n      description: IdOne,\r\n      profession: \"Physicist\",\r\n      id: 1\r\n    },\r\n    {\r\n      title: \"Stephen Hawking\",\r\n      position: \"Notyet\",\r\n      description: IdTwo,\r\n      profession: \"Physicist\",\r\n      id: 2\r\n    },\r\n    {\r\n      title: \"Leonhard Euler\",\r\n      position: \"Notyet\",\r\n      description: IdThree,\r\n      profession: \"Mathematician\",\r\n      id: 3\r\n    },\r\n    {\r\n      title: \"Archimedes\",\r\n      position: \"Notyet\",\r\n      description: IdFour,\r\n      profession: \"Engineer\",\r\n      id: 4\r\n    },\r\n    {\r\n      title: \"Galileo Galilei\",\r\n      position: \"Notyet\",\r\n      description: IdFive,\r\n      profession: \"Physicist\",\r\n      id: 5\r\n    },\r\n    {\r\n      title: \"Isaac Newton\",\r\n      position: \"Notyet\",\r\n      description: IdSix,\r\n      profession: \"Mathematician\",\r\n      id: 6\r\n    },\r\n    {\r\n      title: \"Tim Berners-Lee\",\r\n      position: \"Notyet\",\r\n      description: IdSeven,\r\n      profession: \"Engineer\",\r\n      id: 7\r\n    }\r\n  ];\r\n}\r\n\r\nexport function profession() {\r\n  return [\r\n    {\r\n      profession: \"All\",\r\n      id: 0\r\n    },\r\n    {\r\n      profession: \"Engineer\",\r\n      id: 1\r\n    },\r\n    {\r\n      profession: \"Mathematician\",\r\n      id: 2\r\n    },\r\n    {\r\n      profession: \"Physicist\",\r\n      id: 3\r\n    }\r\n  ];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}