{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { SIGN_OUT, SIGN_IN, CREATE_STREAM } from \"./types\";\nimport streams from '../apis/streams';\nexport var SignIn = function SignIn(GoogleId) {\n  return {\n    type: SIGN_IN,\n    payload: {\n      //remeber in video is different\n      id: GoogleId\n    }\n  };\n};\nexport var SignOut = function SignOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post('/streams', formValues);\n\n              case 2:\n                response = _context.sent;\n                //giving the form values so in order the\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\actions\\index.js"],"names":["SIGN_OUT","SIGN_IN","CREATE_STREAM","streams","SignIn","GoogleId","type","payload","id","SignOut","createStream","formValues","dispatch","post","response","data"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,OAAjB,EAAyBC,aAAzB,QAA6C,SAA7C;AACA,OAAOC,OAAP,MAAmB,iBAAnB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAa;AACjC,SAAM;AACFC,IAAAA,IAAI,EAACL,OADH;AAEFM,IAAAA,OAAO,EAAC;AAAE;AACNC,MAAAA,EAAE,EAACH;AADC;AAFN,GAAN;AAMD,CAPM;AAQP,OAAO,IAAMI,OAAO,GAAE,SAATA,OAAS,GAAK;AACvB,SAAM;AACFH,IAAAA,IAAI,EAACN;AADH,GAAN;AAGH,CAJM;AAMP,OAAO,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAc;AACxC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgBT,OAAO,CAACU,IAAR,CAAa,UAAb,EAAwBF,UAAxB,CADhB;;AAAA;AACCG,gBAAAA,QADD;AACoD;AACvDF,gBAAAA,QAAQ,CAAC;AAACN,kBAAAA,IAAI,EAACJ,aAAN;AAAoBK,kBAAAA,OAAO,EAACO,QAAQ,CAACC;AAArC,iBAAD,CAAR;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAID,CALM","sourcesContent":["import {SIGN_OUT,SIGN_IN,CREATE_STREAM} from \"./types\";\r\nimport streams from'../apis/streams'\r\n\r\nexport const SignIn = (GoogleId) =>{\r\n  return{\r\n      type:SIGN_IN,\r\n      payload:{ //remeber in video is different\r\n          id:GoogleId\r\n      }\r\n  }\r\n};\r\nexport const SignOut= () =>{\r\n    return{\r\n        type:SIGN_OUT\r\n    }\r\n};\r\n\r\nexport const createStream = (formValues)=>{\r\n  return async (dispatch)=>{\r\n    const response=await streams.post('/streams',formValues);//giving the form values so in order the\r\n      dispatch({type:CREATE_STREAM,payload:response.data})\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}