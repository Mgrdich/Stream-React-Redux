{"ast":null,"code":"export default function (p) {\n  p.preload = function () {\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n      p.ButtonClicked = props.p5Props.start;\n      p.ButtonClickedR = props.p5Props.reset;\n      p.degree = 45; //this should be entered by the user check\n\n      p.theta = p.degree * Math.PI / 180; //console.log(p.theta);\n\n      p.xPosition = 500 / Math.tan(p.theta);\n      p.radius = 25;\n      p.ellipseX = Math.sin(p.theta) * p.radius;\n      p.ellipseY = 100 - Math.cos(p.theta) * p.radius;\n      p.njteh = 100 - p.radius / Math.cos(p.theta);\n      p.slope = Math.tan(p.theta);\n      p.g = 10;\n      p.Myu = 0.1; //friction coefficent\n\n      p.mass = 5;\n      p.v = 5;\n      p.acc = p.g * Math.cos(p.theta) - p.Myu * Math.sin(p.theta); //formula with njteh\n\n      p.vx = 0;\n    };\n  };\n\n  var reset1 = function reset1() {\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n      if (props.p5Props) {\n        p.ButtonClicked = props.p5Props.start;\n        p.ButtonClickedR = props.p5Props.reset;\n        p.degree = 45; //this should be entered by the user check\n\n        p.theta = p.degree * Math.PI / 180;\n        p.xPosition = 500 / Math.tan(p.theta);\n        p.radius = 25; //input\n\n        p.ellipseX = Math.sin(p.theta) * p.radius;\n        p.ellipseY = 100 - Math.cos(p.theta) * p.radius;\n        p.njteh = 100 - p.radius / Math.cos(p.theta);\n        p.slope = Math.tan(p.theta);\n        p.g = 10; //input\n\n        p.Myu = 0.1; //input\n\n        p.v = 5;\n        p.acc = p.g * Math.cos(p.theta) - p.Myu * Math.sin(p.theta); //formula with njteh\n\n        p.vx = 0;\n      }\n    };\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n\n  p.draw = function () {\n    p.background(200, 250, 100);\n    p.fill(\"blue\");\n    p.triangle(0, 100, 0, 600, p.xPosition, 600); //for the most part\n\n    p.fill(\"red\");\n    p.ellipse(p.ellipseX, p.ellipseY, p.radius * 2);\n\n    if (p.ButtonClicked) {\n      p.Calculate();\n    } else if (!p.ButtonClicked && p.ButtonClickedR) {\n      reset1();\n    }\n  };\n\n  p.Calculate = function () {\n    p.vx = p.vx + p.acc * Math.cos(p.theta);\n    p.ellipseX += p.vx / 60;\n    p.ellipseY = p.slope * p.ellipseX + p.njteh;\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\sketch3.js"],"names":["p","preload","myCustomRedrawAccordingToNewPropsHandler","props","ButtonClicked","p5Props","start","ButtonClickedR","reset","degree","theta","Math","PI","xPosition","tan","radius","ellipseX","sin","ellipseY","cos","njteh","slope","g","Myu","mass","v","acc","vx","reset1","setup","createCanvas","windowWidth","windowHeight","draw","background","fill","triangle","ellipse","Calculate","windowResized","resizeCanvas"],"mappings":"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","sourcesContent":["export default function(p) {\r\n  p.preload = () => {\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      p.ButtonClicked = props.p5Props.start;\r\n      p.ButtonClickedR = props.p5Props.reset;\r\n      p.degree = 45; //this should be entered by the user check\r\n      p.theta = (p.degree * Math.PI) / 180;\r\n      //console.log(p.theta);\r\n      p.xPosition = 500 / Math.tan(p.theta);\r\n      p.radius = 25;\r\n      p.ellipseX = Math.sin(p.theta) * p.radius;\r\n      p.ellipseY = 100 - Math.cos(p.theta) * p.radius;\r\n      p.njteh = 100 - p.radius / Math.cos(p.theta);\r\n      p.slope = Math.tan(p.theta);\r\n      p.g = 10;\r\n      p.Myu = 0.1; //friction coefficent\r\n      p.mass = 5;\r\n      p.v = 5;\r\n      p.acc = p.g * Math.cos(p.theta) - p.Myu * Math.sin(p.theta); //formula with njteh\r\n      p.vx = 0;\r\n    };\r\n  };\r\n  const reset1 = () => {\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      if (props.p5Props) {\r\n        p.ButtonClicked = props.p5Props.start;\r\n        p.ButtonClickedR = props.p5Props.reset;\r\n        p.degree = 45; //this should be entered by the user check\r\n        p.theta = (p.degree * Math.PI) / 180;\r\n        p.xPosition = 500 / Math.tan(p.theta);\r\n        p.radius = 25; //input\r\n        p.ellipseX = Math.sin(p.theta) * p.radius;\r\n        p.ellipseY = 100 - Math.cos(p.theta) * p.radius;\r\n        p.njteh = 100 - p.radius / Math.cos(p.theta);\r\n        p.slope = Math.tan(p.theta);\r\n        p.g = 10; //input\r\n        p.Myu = 0.1; //input\r\n        p.v = 5;\r\n        p.acc = p.g * Math.cos(p.theta) - p.Myu * Math.sin(p.theta); //formula with njteh\r\n        p.vx = 0;\r\n      }\r\n    };\r\n  };\r\n  p.setup = () => {\r\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.background(200, 250, 100);\r\n\r\n    p.fill(\"blue\");\r\n    p.triangle(0, 100, 0, 600, p.xPosition, 600); //for the most part\r\n    p.fill(\"red\");\r\n    p.ellipse(p.ellipseX, p.ellipseY, p.radius * 2);\r\n    if (p.ButtonClicked) {\r\n    p.Calculate();}else if(!p.ButtonClicked && p.ButtonClickedR ){\r\n      reset1();\r\n    }\r\n  };\r\n\r\n  p.Calculate = () => {\r\n    p.vx = p.vx + p.acc * Math.cos(p.theta);\r\n    p.ellipseX += p.vx / 60;\r\n    p.ellipseY = p.slope * p.ellipseX + p.njteh;\r\n  };\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}