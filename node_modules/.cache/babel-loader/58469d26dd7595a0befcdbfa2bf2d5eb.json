{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\Navbar.js\";\nimport React, { Component } from \"react\";\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Navbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.redclass = function () {\n      if (_this.totalOnline() > 3) return \"badge badge-success\";else if (_this.totalOnline() > 0) return \"badge badge-light\";else return \"badge badge-danger\";\n    };\n\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"nav\", {\n        className: \"navbar navbar-dark bg-dark \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-brand fontify \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Number = \", this.totalnumber_values(), \" \", React.createElement(\"span\", {\n        className: this.redclass(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, this.totalOnline()), \" \", \"Liked=\", this.totalLiked()));\n    }\n  }, {\n    key: \"totalnumber_values\",\n    value: function totalnumber_values() {\n      var reducer = function reducer(accumulator, currentValue) {\n        return accumulator + currentValue.value;\n      };\n\n      var array = this.props.counters;\n      var total = array.reduce(reducer, 0); //console.log(total);\n\n      return total;\n    }\n  }, {\n    key: \"totalOnline\",\n    value: function totalOnline() {\n      var array = this.props.counters;\n      var length1 = array.filter(function (c) {\n        return c.value > 0;\n      }).length; //console.log(length1);\n\n      return length1;\n    }\n  }, {\n    key: \"totalLiked\",\n    value: function totalLiked() {\n      var reducer = function reducer(acc, tot) {\n        return acc + tot.liked;\n      };\n\n      var total = this.props.counters.reduce(reducer, 0);\n      return total;\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default Navbar;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\Navbar.js"],"names":["React","Component","Navbar","redclass","totalOnline","totalnumber_values","totalLiked","reducer","accumulator","currentValue","value","array","props","counters","total","reduce","length1","filter","c","length","acc","tot","liked"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,M;;;;;;;;;;;;;;;;;;UA8BFC,Q,GAAS,YAAI;AACT,UAAG,MAAKC,WAAL,KAAmB,CAAtB,EACI,OAAO,qBAAP,CADJ,KAEK,IAAG,MAAKA,WAAL,KAAmB,CAAtB,EACD,OAAO,mBAAP,CADC,KAGD,OAAO,oBAAP;AACP,K;;;;;;;6BAnCM;AACP,aACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY,KAAKC,kBAAL,EADZ,EAEK,GAFL,EAES;AAAM,QAAA,SAAS,EAAE,KAAKF,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmC,KAAKC,WAAL,EAAnC,CAFT,EAGK,GAHL,YAGgB,KAAKE,UAAL,EAHhB,CADF,CADF;AAUD;;;yCACoB;AACnB,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,WAAD,EAAcC,YAAd,EAA+B;AAC7C,eAAOD,WAAW,GAAGC,YAAY,CAACC,KAAlC;AACD,OAFD;;AAIA,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAvB;AACA,UAAIC,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaR,OAAb,EAAsB,CAAtB,CAAZ,CANmB,CAOnB;;AACA,aAAOO,KAAP;AACD;;;kCACY;AACT,UAAIH,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAvB;AACA,UAAIG,OAAO,GAACL,KAAK,CAACM,MAAN,CAAa,UAAAC,CAAC;AAAA,eAAEA,CAAC,CAACR,KAAF,GAAQ,CAAV;AAAA,OAAd,EAA2BS,MAAvC,CAFS,CAGT;;AACA,aAAOH,OAAP;AACH;;;iCASW;AACR,UAAMT,OAAO,GAAC,SAARA,OAAQ,CAACa,GAAD,EAAKC,GAAL,EAAW;AAAC,eAAOD,GAAG,GAACC,GAAG,CAACC,KAAf;AAAqB,OAA/C;;AACA,UAAIR,KAAK,GAAC,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,MAApB,CAA2BR,OAA3B,EAAmC,CAAnC,CAAV;AACA,aAAOO,KAAP;AACH;;;;EA1CkBb,S;;AA6CrB,eAAeC,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark \">\r\n        <span className=\"navbar-brand fontify \">\r\n          Number = {this.totalnumber_values()}\r\n            {\" \"}<span className={this.redclass()}>{this.totalOnline()}</span>\r\n            {\" \"}Liked={this.totalLiked()}\r\n        </span>\r\n\r\n      </nav>\r\n    );\r\n  }\r\n  totalnumber_values() {\r\n    const reducer = (accumulator, currentValue) => {\r\n      return accumulator + currentValue.value;\r\n    };\r\n\r\n    let array = this.props.counters;\r\n    let total = array.reduce(reducer, 0);\r\n    //console.log(total);\r\n    return total;\r\n  }\r\n  totalOnline(){\r\n      let array = this.props.counters;\r\n      let length1=array.filter(c=>c.value>0).length;\r\n      //console.log(length1);\r\n      return length1;\r\n  }\r\n    redclass=()=>{\r\n        if(this.totalOnline()>3)\r\n            return \"badge badge-success\";\r\n        else if(this.totalOnline()>0)\r\n            return \"badge badge-light\";\r\n        else\r\n            return \"badge badge-danger\";\r\n    };\r\n  totalLiked(){\r\n      const reducer=(acc,tot)=>{return acc+tot.liked};\r\n      let total=this.props.counters.reduce(reducer,0);\r\n      return total;\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}