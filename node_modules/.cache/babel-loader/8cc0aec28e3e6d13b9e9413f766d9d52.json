{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\pagination.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from 'prop-types';\n\nvar Pagination = function Pagination(props) {\n  // let classname=\"page-item\";\n  var itemsCount = props.itemsCount,\n      PageSize = props.PageSize,\n      onPageChange = props.onPageChange,\n      currentPage = props.currentPage;\n  var pagesCount = Math.ceil(itemsCount / PageSize);\n\n  var pages = _.range(1, pagesCount + 1); //creating an array from 1->pagescount\n\n\n  if (pagesCount === 1) return null;else return React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, pages.map(function (page) {\n    return React.createElement(\"li\", {\n      key: page,\n      className: page === currentPage ? \"page-item active cur\" : \"page-item cur\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"page-link fontify\",\n      onClick: function onClick() {\n        return onPageChange(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, page));\n  })));\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  PageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n}; //this will generate an error in the console if you gave the module an wrong\n//propertyff\n\nexport default Pagination;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\pagination.js"],"names":["React","_","PropTypes","Pagination","props","itemsCount","PageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","map","page","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACzB;AADyB,MAElBC,UAFkB,GAEiCD,KAFjC,CAElBC,UAFkB;AAAA,MAENC,QAFM,GAEiCF,KAFjC,CAENE,QAFM;AAAA,MAEIC,YAFJ,GAEiCH,KAFjC,CAEIG,YAFJ;AAAA,MAEiBC,WAFjB,GAEiCJ,KAFjC,CAEiBI,WAFjB;AAG1B,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAnB;;AACA,MAAMM,KAAK,GAAGX,CAAC,CAACY,KAAF,CAAQ,CAAR,EAAWJ,UAAU,GAAG,CAAxB,CAAd,CAJ0B,CAIgB;;;AAC1C,MAAIA,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP,CAAtB,KAGE,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAT;AAAe,MAAA,SAAS,EAAGA,IAAI,KAAGP,WAAR,GAAqB,sBAArB,GAA4C,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMD,YAAY,CAACQ,IAAD,CAAlB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,IAJH,CAFF,CADa;AAAA,GAAd,CADH,CADF,CADF;AAiBH,CAzBD;;AA2BAZ,UAAU,CAACa,SAAX,GAAqB;AACjBX,EAAAA,UAAU,EAACH,SAAS,CAACe,MAAV,CAAiBC,UADX;AAEjBZ,EAAAA,QAAQ,EAACJ,SAAS,CAACe,MAAV,CAAiBC,UAFT;AAGjBX,EAAAA,YAAY,EAACL,SAAS,CAACiB,IAAV,CAAeD,UAHX;AAIhBV,EAAAA,WAAW,EAACN,SAAS,CAACe,MAAV,CAAiBC;AAJb,CAArB,C,CAMA;AACA;;AACA,eAAef,UAAf","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Pagination = props => {\r\n   // let classname=\"page-item\";\r\n  const { itemsCount, PageSize, onPageChange,currentPage } = props;\r\n  const pagesCount = Math.ceil(itemsCount / PageSize);\r\n  const pages = _.range(1, pagesCount + 1); //creating an array from 1->pagescount\r\n  if (pagesCount === 1) return null;\r\n  else\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pages.map(page => (\r\n            <li key={page} className={(page===currentPage)?\"page-item active cur\":\"page-item cur\"}\r\n            >\r\n              <span\r\n                className=\"page-link fontify\"\r\n                onClick={() => onPageChange(page)}\r\n              >\r\n                {page}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n};\r\n\r\nPagination.propTypes={\r\n    itemsCount:PropTypes.number.isRequired,\r\n    PageSize:PropTypes.number.isRequired,\r\n    onPageChange:PropTypes.func.isRequired\r\n    ,currentPage:PropTypes.number.isRequired\r\n};\r\n//this will generate an error in the console if you gave the module an wrong\r\n//propertyff\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}