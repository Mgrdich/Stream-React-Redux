{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\src\\\\Components\\\\Streams\\\\StreamForm.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Joi from \"joi-browser\";\nimport createValidator from \"../../Validate/myValidation\";\n\nvar StreamForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamForm, _Component);\n\n  function StreamForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderinput = function (formProps) {\n      // console.log(formProps.meta);\n      var input = formProps.input,\n          label = formProps.label,\n          meta = formProps.meta;\n      return React.createElement(\"div\", {\n        className: \"form-group m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: \"text\",\n        className: \"form-control\",\n        id: label,\n        placeholder: label,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })), meta.touched && meta.error && //just like mosh but check the differnce between boolean object true and falsy something\n      React.createElement(\"span\", {\n        className: \"badge badge-danger  d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, meta.error));\n    };\n\n    _this.onSumbit = function (formValues) {\n      _this.props.onSubmit(formValues); //(this is for the redux form props)\n\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamForm, [{\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props);\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSumbit),\n        className: \"col-5 form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        label: \"Title\",\n        component: this.renderinput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        label: \"description\",\n        component: this.renderinput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-dark btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return StreamForm;\n}(Component);\n\nvar schema = {\n  title: Joi.string().required().min(5).label(\"Title\").max(10),\n  description: Joi.string().required().min(5).label(\"Descrption\")\n};\nexport default reduxForm({\n  form: \"streamForm\",\n  validate: createValidator(schema)\n})(StreamForm);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\Stream\\src\\Components\\Streams\\StreamForm.js"],"names":["React","Component","Field","reduxForm","Joi","createValidator","StreamForm","renderinput","formProps","input","label","meta","touched","error","onSumbit","formValues","props","onSubmit","handleSubmit","schema","title","string","required","min","max","description","form","validate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;IAGMC,U;;;;;;;;;;;;;;;;;;UACFC,W,GAAc,UAAAC,SAAS,EAAI;AACvB;AADuB,UAEfC,KAFe,GAEQD,SAFR,CAEfC,KAFe;AAAA,UAERC,KAFQ,GAEQF,SAFR,CAERE,KAFQ;AAAA,UAEDC,IAFC,GAEQH,SAFR,CAEDG,IAFC;AAGvB,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQD,KAAR,CADJ,EAEI,+CACQD,KADR;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,EAAE,EAAEC,KAJR;AAKI,QAAA,WAAW,EAAEA,KALjB;AAMI,QAAA,YAAY,EAAC,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAUKC,IAAI,CAACC,OAAL,IACDD,IAAI,CAACE,KADJ,IACe;AACZ;AAAM,QAAA,SAAS,EAAC,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACLF,IAAI,CAACE,KADA,CAZR,CADJ;AAmBH,K;;UAEDC,Q,GAAW,UAAAC,UAAU,EAAI;AACrB,YAAKC,KAAL,CAAWC,QAAX,CAAoBF,UAApB,EADqB,CACY;;AAEpC,K;;;;;;;6BACQ;AACP;AACE,aAEI,0CACI;AACI,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWE,YAAX,CAAwB,KAAKJ,QAA7B,CADd;AAEI,QAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,OAA1B;AAAkC,QAAA,SAAS,EAAE,KAAKP,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,KAAK,EAAC,aAFV;AAGI,QAAA,SAAS,EAAE,KAAKA,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,CADJ,CAFJ;AAmBH;;;;EAlDoBN,S;;AAqDzB,IAAMkB,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAEhB,GAAG,CAACiB,MAAJ,GACFC,QADE,GAEFC,GAFE,CAEE,CAFF,EAGFb,KAHE,CAGI,OAHJ,EAIFc,GAJE,CAIE,EAJF,CADI;AAMXC,EAAAA,WAAW,EAAErB,GAAG,CAACiB,MAAJ,GACRC,QADQ,GAERC,GAFQ,CAEJ,CAFI,EAGRb,KAHQ,CAGF,YAHE;AANF,CAAf;AAYA,eAAeP,SAAS,CAAC;AACrBuB,EAAAA,IAAI,EAAE,YADe;AAErBC,EAAAA,QAAQ,EAAEtB,eAAe,CAACc,MAAD;AAFJ,CAAD,CAAT,CAGZb,UAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Joi from \"joi-browser\";\r\nimport createValidator from \"../../Validate/myValidation\";\r\n\r\n\r\nclass StreamForm extends Component {\r\n    renderinput = formProps => {\r\n        // console.log(formProps.meta);\r\n        const { input, label, meta } = formProps;\r\n        return (\r\n            <div className=\"form-group m-2\">\r\n                <label>{label}</label>\r\n                <input\r\n                    {...input}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id={label}\r\n                    placeholder={label}\r\n                    autoComplete=\"off\"\r\n                />\r\n                {meta.touched &&\r\n                meta.error && ( //just like mosh but check the differnce between boolean object true and falsy something\r\n                    <span className=\"badge badge-danger  d-inline-block\">\r\n              {meta.error}\r\n            </span>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onSumbit = formValues => {\r\n        this.props.onSubmit(formValues); //(this is for the redux form props)\r\n\r\n    };\r\n    render() {\r\n      // console.log(this.props);\r\n        return (\r\n\r\n            <>\r\n                <form\r\n                    onSubmit={this.props.handleSubmit(this.onSumbit)}\r\n                    className=\"col-5 form-group\"\r\n                >\r\n                    <Field name=\"title\" label=\"Title\" component={this.renderinput}/>\r\n                    <Field\r\n                        name=\"description\"\r\n                        label=\"description\"\r\n                        component={this.renderinput}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-dark btn-sm m-2\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst schema = {\r\n    title: Joi.string()\r\n        .required()\r\n        .min(5)\r\n        .label(\"Title\")\r\n        .max(10),\r\n    description: Joi.string()\r\n        .required()\r\n        .min(5)\r\n        .label(\"Descrption\")\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"streamForm\",\r\n    validate: createValidator(schema)\r\n})(StreamForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}