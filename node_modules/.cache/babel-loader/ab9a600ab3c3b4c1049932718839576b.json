{"ast":null,"code":"export default function (p) {\n  p.props = {};\n  console.log(p.props);\n  p.theta = 45 * Math.PI / 180;\n  p.x1 = 25;\n  p.y1 = 575;\n  p.TotalVelocity = 12; //this is tha canvas limit\n\n  p.Vx = p.TotalVelocity * Math.cos(p.theta);\n  p.Vy = p.TotalVelocity * Math.sin(p.theta);\n  p.g = 9.9;\n  p.radius = 25;\n  p.Range = p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta) / p.g;\n\n  p.setup = function () {\n    p.createCanvas(1000, 600);\n  };\n\n  p.draw = function () {\n    p.background(0);\n    p.noStroke();\n    p.ellipseMode(p.CENTER);\n    ProjectileVector();\n    p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\n  };\n\n  var ProjectileVector = function ProjectileVector() {\n    if (p.x1 > p.width - p.radius || p.y1 > p.height - p.radius) {\n      p.background('blue');\n      p.Vy = 0;\n      p.Vx = 0;\n    } else {\n      p.x1 += p.Vx;\n      p.Vy = p.Vy - p.g / 60;\n      p.y1 -= p.Vy;\n    } //beacuse our coordinates works in opposite direction\n\n\n    console.log(p.x1, p.y1);\n  };\n}\n;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\sketch2.js"],"names":["p","props","console","log","theta","Math","PI","x1","y1","TotalVelocity","Vx","cos","Vy","sin","g","radius","Range","setup","createCanvas","draw","background","noStroke","ellipseMode","CENTER","ProjectileVector","ellipse","width","height"],"mappings":"AAAC,eAAe,UAAUA,CAAV,EAAc;AAC1BA,EAAAA,CAAC,CAACC,KAAF,GAAQ,EAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,KAAd;AAEAD,EAAAA,CAAC,CAACI,KAAF,GAAW,KAAKC,IAAI,CAACC,EAAX,GAAiB,GAA3B;AACAN,EAAAA,CAAC,CAACO,EAAF,GAAO,EAAP;AACAP,EAAAA,CAAC,CAACQ,EAAF,GAAO,GAAP;AACAR,EAAAA,CAAC,CAACS,aAAF,GAAkB,EAAlB,CAP0B,CAOJ;;AACtBT,EAAAA,CAAC,CAACU,EAAF,GAAOV,CAAC,CAACS,aAAF,GAAkBJ,IAAI,CAACM,GAAL,CAASX,CAAC,CAACI,KAAX,CAAzB;AACAJ,EAAAA,CAAC,CAACY,EAAF,GAAOZ,CAAC,CAACS,aAAF,GAAkBJ,IAAI,CAACQ,GAAL,CAASb,CAAC,CAACI,KAAX,CAAzB;AACAJ,EAAAA,CAAC,CAACc,CAAF,GAAM,GAAN;AACAd,EAAAA,CAAC,CAACe,MAAF,GAAS,EAAT;AACAf,EAAAA,CAAC,CAACgB,KAAF,GAAWhB,CAAC,CAACS,aAAF,GAAkBT,CAAC,CAACS,aAApB,GAAoCJ,IAAI,CAACQ,GAAL,CAAS,IAAIb,CAAC,CAACI,KAAf,CAArC,GAA8DJ,CAAC,CAACc,CAA1E;;AAEAd,EAAAA,CAAC,CAACiB,KAAF,GAAU,YAAM;AACZjB,IAAAA,CAAC,CAACkB,YAAF,CAAe,IAAf,EAAqB,GAArB;AACH,GAFD;;AAIAlB,EAAAA,CAAC,CAACmB,IAAF,GAAS,YAAM;AACXnB,IAAAA,CAAC,CAACoB,UAAF,CAAa,CAAb;AACApB,IAAAA,CAAC,CAACqB,QAAF;AACArB,IAAAA,CAAC,CAACsB,WAAF,CAActB,CAAC,CAACuB,MAAhB;AACAC,IAAAA,gBAAgB;AAChBxB,IAAAA,CAAC,CAACyB,OAAF,CAAUzB,CAAC,CAACO,EAAZ,EAAgBP,CAAC,CAACQ,EAAlB,EAAsBR,CAAC,CAACe,MAAF,GAAW,CAAjC,EAAoCf,CAAC,CAACe,MAAF,GAAW,CAA/C;AACH,GAND;;AAQF,MAAOS,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC1B,QAAIxB,CAAC,CAACO,EAAF,GAAOP,CAAC,CAAC0B,KAAF,GAAQ1B,CAAC,CAACe,MAAjB,IAA2Bf,CAAC,CAACQ,EAAF,GAAOR,CAAC,CAAC2B,MAAF,GAAS3B,CAAC,CAACe,MAAjD,EAA0D;AACtDf,MAAAA,CAAC,CAACoB,UAAF,CAAa,MAAb;AACApB,MAAAA,CAAC,CAACY,EAAF,GAAK,CAAL;AACCZ,MAAAA,CAAC,CAACU,EAAF,GAAK,CAAL;AACJ,KAJD,MAKK;AACDV,MAAAA,CAAC,CAACO,EAAF,IAAQP,CAAC,CAACU,EAAV;AACAV,MAAAA,CAAC,CAACY,EAAF,GAAOZ,CAAC,CAACY,EAAF,GAAOZ,CAAC,CAACc,CAAF,GAAM,EAApB;AACAd,MAAAA,CAAC,CAACQ,EAAF,IAAQR,CAAC,CAACY,EAAV;AACH,KAVyB,CAUzB;;;AAGDV,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACO,EAAd,EAAiBP,CAAC,CAACQ,EAAnB;AACH,GAdH;AAeD;AAAA","sourcesContent":[" export default function (p)  {\r\n    p.props={};\r\n    console.log(p.props);\r\n\r\n    p.theta = (45 * Math.PI) / 180;\r\n    p.x1 = 25;\r\n    p.y1 = 575;\r\n    p.TotalVelocity = 12; //this is tha canvas limit\r\n    p.Vx = p.TotalVelocity * Math.cos(p.theta);\r\n    p.Vy = p.TotalVelocity * Math.sin(p.theta);\r\n    p.g = 9.9;\r\n    p.radius=25;\r\n    p.Range = (p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta)) / p.g;\r\n\r\n    p.setup = () => {\r\n        p.createCanvas(1000, 600);\r\n    };\r\n\r\n    p.draw = () => {\r\n        p.background(0);\r\n        p.noStroke();\r\n        p.ellipseMode(p.CENTER);\r\n        ProjectileVector();\r\n        p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\r\n    };\r\n\r\n  const  ProjectileVector = () => {\r\n        if (p.x1 > p.width-p.radius || p.y1 > p.height-p.radius ) {\r\n            p.background('blue');\r\n            p.Vy=0;\r\n             p.Vx=0;\r\n        }\r\n        else {\r\n            p.x1 += p.Vx;\r\n            p.Vy = p.Vy - p.g / 60;\r\n            p.y1 -= p.Vy;\r\n        }//beacuse our coordinates works in opposite direction\r\n\r\n\r\n        console.log(p.x1,p.y1);\r\n    };\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}