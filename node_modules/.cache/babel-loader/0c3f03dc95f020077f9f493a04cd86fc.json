{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\Counter.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getclasses3 = function () {\n      var bbbb;\n      if (_this.props.counter.liked === true) bbbb = \"fas fa-heart\";else bbbb = \"far fa-heart\";\n      return bbbb;\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    //instead of coding h1 what inside dynamically  we add state\n    //to add the state to add any data that the object has\n\n    /*  state = {\r\n      count:this.props.counter.value\r\n      //this should be done all of it by the parent\r\n    };*/\n    //the state is executted only once when when creating the instance\n    //the count here is a local instance so any action from Counters\n    //will not effect it\n    //and if we are using props with the state and constructor\n    //write like this\n\n    /*\r\n    constructor() {\r\n      super();\r\n      //  this.handleIncrement=this.handleIncrement.bind(this);//the this exist in this\r\n      //this.handleDecrement = this.handleDecrement.bind(this);\r\n      this.prod = {\r\n        id: 4\r\n      };\r\n    }*/\n    value: function render() {\n      //console.log(this.props);//taking the props from the Counter\n      //console.log(class2);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.mybuttons());\n    }\n  }, {\n    key: \"getclass2\",\n    value: function getclass2() {\n      var class2 = \"fontify m-2 \";\n      class2 += this.props.counter.value === 0 ? \" badge badge-warning\" : \" badge badge-success\";\n      return class2;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var value = this.props.counter.value; //deconstructing taking the value parameter\n\n      return value;\n    }\n  }, {\n    key: \"renderTags\",\n    value: function renderTags() {\n      //not used here\n      if (this.state.tags.length === 0) {\n        return React.createElement(\"h1\", {\n          className: \"badge badge-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Please insert some tags\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, this.state.tags.map(map1_fn));\n      }\n    }\n    /*handleIncrement = obj => {\r\n      //either with constructer or arrow function because the\r\n      //arrow function do not rebind this they inherit them\r\n      // console.log(this);//to check if this is defined\r\n      //this.state.count++;\r\n      // console.log(this.state.count);\r\n      //we should tell virtual dom\r\n        this.setState({ count: this.state.count + 1 });\r\n    };*/\n    //whaat if we ant to pass parameters of an event we can not put it here\n    //we construct another function so that it will pass parameter\n\n    /*  dohandleIncrement=()=>{\r\n      this.handleIncrement({id:1});//this way you give the fn of your event a\r\n      //parameter or you can write it of onclick event\r\n    };*/\n\n    /*handleDecrement = ()=> {\r\n      if (this.state.count > 0) {\r\n        this.setState({ count: this.state.count - 1 });\r\n      }\r\n      /!*else\r\n      {\r\n        //console.log(\"i am inside\"); check the solution for this\r\n        return this.setState( (<p >No more Decrement</p>));\r\n      }*!/\r\n    };*/\n\n  }, {\n    key: \"someMessages\",\n    value: function someMessages() {\n      if (this.props.counter.value === 0) return React.createElement(\"div\", {\n        className: \"fontify d-inline-block alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"No more Decrement\");\n      if (this.props.counter.value === 10) return React.createElement(\"div\", {\n        className: \"fontify d-inline-block alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"max is 10\");\n    }\n  }, {\n    key: \"mybuttons\",\n    value: function mybuttons() {\n      var _this2 = this;\n\n      //  console.log(\"I am the my buttons function\",this.props);\n      var classes1 = \"btn btn-primary btn-lg m-2 fontify\";\n      var classes2 = \"fontify btn btn-danger btn-lg m-2 fontify\";\n      var class2 = this.getclass2();\n      return React.createElement(\"div\", {\n        className: \"d-inline-block container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: class2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" \", this.formatCount())), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.onIncrement(_this2.props.counter);\n        },\n        disabled: this.props.counter.value === 10 ? \"disabled\" : \"\",\n        type: \"button\",\n        className: classes1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.props.onDecrement(_this2.props.counter);\n        },\n        disabled: this.props.counter.value === 0 ? \"disabled\" : \"\",\n        type: \"button\",\n        className: classes1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.onDelete(_this2.props.counter.id);\n        },\n        type: \"button\",\n        className: classes2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: classes1,\n        onClick: function onClick() {\n          _this2.props.onLiked(_this2.props.counter);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: this.getclasses3(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), this.someMessages())));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;\n\nvar map1_fn = function map1_fn(tag) {\n  return React.createElement(\"li\", {\n    key: tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, tag);\n};","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\Counter.js"],"names":["React","Component","Counter","getclasses3","bbbb","props","counter","liked","mybuttons","class2","value","state","tags","length","map","map1_fn","classes1","classes2","getclass2","formatCount","onIncrement","onDecrement","onDelete","id","onLiked","someMessages","tag"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Counter extends Component {\r\n  //instead of coding h1 what inside dynamically  we add state\r\n  //to add the state to add any data that the object has\r\n\r\n  /*  state = {\r\n    count:this.props.counter.value\r\n    //this should be done all of it by the parent\r\n  };*/\r\n\r\n  //the state is executted only once when when creating the instance\r\n  //the count here is a local instance so any action from Counters\r\n  //will not effect it\r\n  //and if we are using props with the state and constructor\r\n  //write like this\r\n\r\n  /*\r\n  constructor() {\r\n    super();\r\n    //  this.handleIncrement=this.handleIncrement.bind(this);//the this exist in this\r\n    //this.handleDecrement = this.handleDecrement.bind(this);\r\n    this.prod = {\r\n      id: 4\r\n    };\r\n  }*/\r\n  render() {\r\n    //console.log(this.props);//taking the props from the Counter\r\n    //console.log(class2);\r\n    return (\r\n      <div>\r\n        {this.mybuttons()}\r\n        {/* contains jsx returns*/}\r\n        {/*{this.someMessages()}*/}\r\n\r\n        {/*{this.renderTags()}*/}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getclass2() {\r\n    let class2 = \"fontify m-2 \";\r\n    class2 +=\r\n      this.props.counter.value === 0\r\n        ? \" badge badge-warning\"\r\n        : \" badge badge-success\";\r\n    return class2;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter; //deconstructing taking the value parameter\r\n    return value;\r\n  }\r\n\r\n  renderTags() {\r\n    //not used here\r\n    if (this.state.tags.length === 0) {\r\n      return <h1 className=\"badge badge-danger\">Please insert some tags</h1>;\r\n    } else {\r\n      return <ul>{this.state.tags.map(map1_fn)}</ul>;\r\n    }\r\n  }\r\n  /*handleIncrement = obj => {\r\n    //either with constructer or arrow function because the\r\n    //arrow function do not rebind this they inherit them\r\n    // console.log(this);//to check if this is defined\r\n    //this.state.count++;\r\n    // console.log(this.state.count);\r\n    //we should tell virtual dom\r\n\r\n    this.setState({ count: this.state.count + 1 });\r\n  };*/\r\n\r\n  //whaat if we ant to pass parameters of an event we can not put it here\r\n  //we construct another function so that it will pass parameter\r\n  /*  dohandleIncrement=()=>{\r\n    this.handleIncrement({id:1});//this way you give the fn of your event a\r\n    //parameter or you can write it of onclick event\r\n  };*/\r\n\r\n  /*handleDecrement = ()=> {\r\n    if (this.state.count > 0) {\r\n      this.setState({ count: this.state.count - 1 });\r\n    }\r\n    /!*else\r\n    {\r\n      //console.log(\"i am inside\"); check the solution for this\r\n      return this.setState( (<p >No more Decrement</p>));\r\n    }*!/\r\n  };*/\r\n  someMessages() {\r\n    if (this.props.counter.value === 0)\r\n      return (\r\n        <div className=\"fontify d-inline-block alert alert-danger\">\r\n          No more Decrement\r\n        </div>\r\n      );\r\n\r\n    if (this.props.counter.value === 10)\r\n      return (\r\n        <div className=\"fontify d-inline-block alert alert-success\">\r\n          max is 10\r\n        </div>\r\n      );\r\n  }\r\n  mybuttons() {\r\n    //  console.log(\"I am the my buttons function\",this.props);\r\n    let classes1 = \"btn btn-primary btn-lg m-2 fontify\";\r\n    let classes2 = \"fontify btn btn-danger btn-lg m-2 fontify\";\r\n    let class2 = this.getclass2();\r\n\r\n    return (\r\n      <div className=\"d-inline-block container\">\r\n        {\" \"}\r\n        {/*here the container is what making each one of them acting */}\r\n        {/* {this.props.children} */}\r\n        <div className=\"row\">\r\n          <div className=\"col-1\">\r\n\r\n            <div className={class2}> {this.formatCount()}</div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.onIncrement(this.props.counter);\r\n              }}\r\n              disabled={this.props.counter.value===10?\"disabled\":\"\"}\r\n              type=\"button\"\r\n              className={classes1}\r\n            >\r\n              +\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.onDecrement(this.props.counter);\r\n              }}\r\n              disabled={this.props.counter.value===0?\"disabled\":\"\"}\r\n              type=\"button\"\r\n              className={classes1}\r\n            >\r\n              -\r\n            </button>\r\n            <button\r\n              onClick={() => this.props.onDelete(this.props.counter.id)}\r\n              type=\"button\"\r\n              className={classes2}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button className={classes1} onClick={()=>{this.props.onLiked(this.props.counter)}}><i className={this.getclasses3()} /></button>\r\n              {this.someMessages()}\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  getclasses3=()=>{\r\nlet bbbb;\r\n    if(this.props.counter.liked===true)\r\n      bbbb=\"fas fa-heart\";\r\n    else\r\n      bbbb=\"far fa-heart\";\r\n    return bbbb;\r\n  };\r\n}\r\n\r\nexport default Counter;\r\n\r\nconst map1_fn = tag => {\r\n  return <li key={tag}>{tag}</li>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}