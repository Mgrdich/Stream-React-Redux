{"ast":null,"code":"//this functions takes an array as an argument with the regular expressions as arguments and return new array with in it only\n//what was available in the Search bar\nexport function SimplifyByReg(array, search) {\n  var regular = new RegExp(search, \"i\");\n  var RegtifyArray = array.filter(function (m) {\n    return !m.title.search(regular);\n  });\n  return RegtifyArray;\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\utility\\SearchRegExp.js"],"names":["SimplifyByReg","array","search","regular","RegExp","RegtifyArray","filter","m","title"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AAEzC,MAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAWF,MAAX,EAAmB,GAAnB,CAAd;AACA,MAAIG,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAAa,UAAAC,CAAC;AAAA,WAAI,CAACA,CAAC,CAACC,KAAF,CAAQN,MAAR,CAAeC,OAAf,CAAL;AAAA,GAAd,CAAnB;AACA,SAAOE,YAAP;AACH","sourcesContent":["//this functions takes an array as an argument with the regular expressions as arguments and return new array with in it only\r\n//what was available in the Search bar\r\nexport function SimplifyByReg(array, search) {\r\n\r\n    let regular = new RegExp(search, \"i\");\r\n    let RegtifyArray = array.filter(m => !m.title.search(regular));\r\n    return RegtifyArray;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}