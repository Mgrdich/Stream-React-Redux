{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\Movies.js\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./pagination\";\nimport ListGroup from \"./ListGroup\";\nimport MoviesTable from \"./MoviesTable\";\nimport _ from 'lodash';\nimport { paginate } from \"../utility/paginate\";\nimport { Link } from 'react-router-dom';\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      //not the right way by the way\n      genres: [],\n      PageSize: 4,\n      currentpage: 1,\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      }\n    };\n\n    _this.getPageData = function () {\n      var _this$state = _this.state,\n          selectedGenre = _this$state.selectedGenre,\n          allMovies = _this$state.movies,\n          currentpage = _this$state.currentpage,\n          PageSize = _this$state.PageSize,\n          sortColumn = _this$state.sortColumn;\n      var filtered_movies = selectedGenre && selectedGenre._id ? allMovies.filter(function (m) {\n        return m.genre._id === selectedGenre._id;\n      }) : allMovies;\n\n      var sorted = _.orderBy(filtered_movies, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sorted, currentpage, PageSize);\n      return {\n        movies: movies,\n        SomeLength: filtered_movies.length\n      };\n    };\n\n    _this.handleDelete = function (the_id) {\n      var newarray = _this.state.movies.filter(function (w) {\n        return w._id !== the_id;\n      });\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handleLike = function (object) {\n      var newarray = _toConsumableArray(_this.state.movies);\n\n      var index = newarray.indexOf(object);\n      newarray[index].liked = !newarray[index].liked;\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentpage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        currentpage: 1\n      });\n    };\n\n    _this.handleSort = function (ob) {\n      _this.setState({\n        sortColumn: ob\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = [{\n        name: 'All Genres',\n        _id: \"\"\n      }].concat(_toConsumableArray(getGenres()));\n      this.setState({\n        movies: getMovies(),\n        genres: genres\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          currentpage = _this$state2.currentpage,\n          PageSize = _this$state2.PageSize,\n          sortColumn = _this$state2.sortColumn;\n\n      var _this$getPageData = this.getPageData(),\n          movies = _this$getPageData.movies,\n          SomeLength = _this$getPageData.SomeLength;\n\n      if (SomeLength === 0) return React.createElement(\"h1\", {\n        className: \"fontify badge badge-pill badge-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"no more movies in Database\");else return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: this.state.genres,\n        onItemSelect: this.handleGenreSelect,\n        selectedItem: this.state.selectedGenre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"fontify alert  alert-info d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Showing \", React.createElement(\"span\", {\n        className: \"badge badge-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, SomeLength), \" movies in Database\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm fontify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"New Movie\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(MoviesTable, {\n        movies: movies,\n        handleDelete: this.handleDelete,\n        handleLike: this.handleLike,\n        onSort: this.handleSort,\n        sortColumn: sortColumn,\n        onLike: this.handleLike,\n        onDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: SomeLength,\n        PageSize: PageSize,\n        onPageChange: this.handlePageChange,\n        currentPage: currentpage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\Movies.js"],"names":["React","Component","getMovies","getGenres","Pagination","ListGroup","MoviesTable","_","paginate","Link","Movies","state","movies","genres","PageSize","currentpage","sortColumn","path","order","getPageData","selectedGenre","allMovies","filtered_movies","_id","filter","m","genre","sorted","orderBy","SomeLength","length","handleDelete","the_id","newarray","w","setState","handleLike","object","index","indexOf","liked","handlePageChange","page","handleGenreSelect","handleSort","ob","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Pagination from \"./pagination\";\r\nimport ListGroup from \"./ListGroup\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport _ from 'lodash';\r\nimport {paginate} from \"../utility/paginate\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [], //not the right way by the way\r\n    genres: [],\r\n    PageSize: 4,\r\n    currentpage: 1,\r\n    sortColumn:{path:'title',order:'asc'}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres=[{name:'All Genres',_id:\"\"},...getGenres()];\r\n    this.setState({ movies: getMovies(), genres:genres });\r\n  }\r\ngetPageData=()=>{\r\n  const {selectedGenre,movies:allMovies,currentpage,PageSize,sortColumn}=this.state;\r\n\r\n  const filtered_movies=\r\n      (selectedGenre && selectedGenre._id)\r\n          ?allMovies.filter(m=> m.genre._id===selectedGenre._id )\r\n          :allMovies;\r\n\r\n  const sorted=  _.orderBy(filtered_movies,[sortColumn.path],[sortColumn.order]);\r\n\r\n  const movies = paginate(sorted,currentpage,PageSize);\r\n  return {movies,SomeLength:filtered_movies.length}\r\n};\r\n\r\n  render() {\r\n    const {currentpage,PageSize,sortColumn}=this.state;\r\n\r\n    const {movies,SomeLength}=this.getPageData();\r\n\r\n    if (SomeLength === 0)\r\n      return (\r\n        <h1 className=\"fontify badge badge-pill badge-danger\">\r\n          no more movies in Database\r\n        </h1>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <ListGroup\r\n              items={this.state.genres}\r\n              onItemSelect={this.handleGenreSelect}\r\n              selectedItem={this.state.selectedGenre}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <br/>\r\n            <span className=\"fontify alert  alert-info d-inline-block\">\r\n              Showing <span className=\"badge badge-light\">{SomeLength}</span> movies in Database\r\n            </span>\r\n           <br/>\r\n           <button className=\"btn btn-primary btn-sm fontify\"><Link to=\"/register\">New Movie</Link></button>\r\n            <br/>\r\n            <MoviesTable\r\n                movies={movies}\r\n                handleDelete={this.handleDelete}\r\n                handleLike={this.handleLike}\r\n                onSort={this.handleSort}\r\n                sortColumn={sortColumn}\r\n                onLike={this.handleLike}\r\n                onDelete={this.handleDelete}\r\n            />\r\n            <Pagination\r\n              itemsCount={SomeLength}\r\n              PageSize={PageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentpage}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  handleDelete = the_id => {\r\n    const newarray = this.state.movies.filter(w => {\r\n      return w._id !== the_id;\r\n    });\r\n    this.setState({ movies: newarray });\r\n  };\r\n\r\n  handleLike = object => {\r\n    const newarray = [...this.state.movies];\r\n    let index = newarray.indexOf(object);\r\n    newarray[index].liked = !newarray[index].liked;\r\n    this.setState({ movies: newarray });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentpage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre ,currentpage:1});\r\n  };\r\n\r\n  handleSort=(ob)=>{\r\n    this.setState({sortColumn:ob});\r\n  };\r\n\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}