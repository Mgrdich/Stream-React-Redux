{"ast":null,"code":"import Joi from 'joi-browser';\nexport default function createValidator(schema) {\n  return function (values) {\n    var result = Joi.validate(values, schema, {\n      abortEarly: false\n    });\n\n    if (result.error === null) {\n      return {};\n    }\n\n    var errors = result.error.details.reduce(function (all, cur) {\n      var allErrors = Object.assign({}, all);\n      var path = cur.path[cur.path.length - 1];\n      var message = cur.message;\n\n      if (Object.prototype.hasOwnProperty.call(allErrors, path)) {\n        allErrors[path] += message;\n      } else {\n        allErrors[path] = message;\n      }\n\n      return allErrors;\n    }, {});\n    return errors;\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Validate\\myValidation.js"],"names":["Joi","createValidator","schema","values","result","validate","abortEarly","error","errors","details","reduce","all","cur","allErrors","Object","assign","path","length","message","prototype","hasOwnProperty","call"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,eAAe,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC5C,SAAO,UAAAC,MAAM,EAAI;AACb,QAAMC,MAAM,GAAGJ,GAAG,CAACK,QAAJ,CAAaF,MAAb,EAAqBD,MAArB,EAA6B;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAA7B,CAAf;;AACA,QAAIF,MAAM,CAACG,KAAP,KAAiB,IAArB,EAA2B;AACvB,aAAO,EAAP;AACH;;AAED,QAAMC,MAAM,GAAGJ,MAAM,CAACG,KAAP,CAAaE,OAAb,CAAqBC,MAArB,CAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrD,UAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,GAAlB,CAAlB;AACA,UAAMK,IAAI,GAAGJ,GAAG,CAACI,IAAJ,CAASJ,GAAG,CAACI,IAAJ,CAASC,MAAT,GAAkB,CAA3B,CAAb;AACA,UAAMC,OAAO,GAAGN,GAAG,CAACM,OAApB;;AACA,UAAIJ,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,SAArC,EAAgDG,IAAhD,CAAJ,EAA2D;AACvDH,QAAAA,SAAS,CAACG,IAAD,CAAT,IAAmBE,OAAnB;AACH,OAFD,MAEO;AACHL,QAAAA,SAAS,CAACG,IAAD,CAAT,GAAkBE,OAAlB;AACH;;AACD,aAAOL,SAAP;AACH,KAVc,EAUZ,EAVY,CAAf;AAYA,WAAOL,MAAP;AACH,GAnBD;AAoBH","sourcesContent":["import Joi from 'joi-browser'\r\nexport default function createValidator(schema) {\r\n    return values => {\r\n        const result = Joi.validate(values, schema, { abortEarly: false });\r\n        if (result.error === null) {\r\n            return {};\r\n        }\r\n\r\n        const errors = result.error.details.reduce((all, cur) => {\r\n            const allErrors = Object.assign({}, all);\r\n            const path = cur.path[cur.path.length - 1];\r\n            const message = cur.message;\r\n            if (Object.prototype.hasOwnProperty.call(allErrors, path)) {\r\n                allErrors[path] += message;\r\n            } else {\r\n                allErrors[path] = message;\r\n            }\r\n            return allErrors;\r\n        }, {});\r\n\r\n        return errors;\r\n    };\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}