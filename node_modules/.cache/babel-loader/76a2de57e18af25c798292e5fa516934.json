{"ast":null,"code":"export default function (p) {\n  p.theta = 45 * Math.PI / 180;\n  p.x1 = 25;\n  p.y1 = 575;\n  p.TotalVelocity = 12; //this is tha canvas limit\n\n  p.Vx = p.TotalVelocity * Math.cos(p.theta);\n  p.Vy = p.TotalVelocity * Math.sin(p.theta);\n  p.g = 9.9;\n  p.radius = 25;\n  p.Range = p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta) / p.g;\n\n  p.setup = function () {\n    p.createCanvas(1000, 600);\n  };\n\n  p.draw = function () {\n    p.background(0);\n    p.noStroke();\n    p.ellipseMode(p.CENTER);\n    ProjectileVector();\n    p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\n  };\n\n  var ProjectileVector = function ProjectileVector() {\n    if (p.x1 > p.width - p.radius || p.y1 > p.height - p.radius) {\n      p.background('blue');\n      p.Vy = 0;\n      p.Vx = 0;\n    } else {\n      p.x1 += p.Vx;\n      p.Vy = p.Vy - p.g / 60;\n      p.y1 -= p.Vy;\n    } //beacuse our coordinates works in opposite direction\n\n\n    console.log(p.x1, p.y1);\n  };\n}\n;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\sketch2.js"],"names":["p","theta","Math","PI","x1","y1","TotalVelocity","Vx","cos","Vy","sin","g","radius","Range","setup","createCanvas","draw","background","noStroke","ellipseMode","CENTER","ProjectileVector","ellipse","width","height","console","log"],"mappings":"AAAC,eAAe,UAAUA,CAAV,EAAc;AAC1BA,EAAAA,CAAC,CAACC,KAAF,GAAW,KAAKC,IAAI,CAACC,EAAX,GAAiB,GAA3B;AACAH,EAAAA,CAAC,CAACI,EAAF,GAAO,EAAP;AACAJ,EAAAA,CAAC,CAACK,EAAF,GAAO,GAAP;AACAL,EAAAA,CAAC,CAACM,aAAF,GAAkB,EAAlB,CAJ0B,CAIJ;;AACtBN,EAAAA,CAAC,CAACO,EAAF,GAAOP,CAAC,CAACM,aAAF,GAAkBJ,IAAI,CAACM,GAAL,CAASR,CAAC,CAACC,KAAX,CAAzB;AACAD,EAAAA,CAAC,CAACS,EAAF,GAAOT,CAAC,CAACM,aAAF,GAAkBJ,IAAI,CAACQ,GAAL,CAASV,CAAC,CAACC,KAAX,CAAzB;AACAD,EAAAA,CAAC,CAACW,CAAF,GAAM,GAAN;AACAX,EAAAA,CAAC,CAACY,MAAF,GAAS,EAAT;AACAZ,EAAAA,CAAC,CAACa,KAAF,GAAWb,CAAC,CAACM,aAAF,GAAkBN,CAAC,CAACM,aAApB,GAAoCJ,IAAI,CAACQ,GAAL,CAAS,IAAIV,CAAC,CAACC,KAAf,CAArC,GAA8DD,CAAC,CAACW,CAA1E;;AAEAX,EAAAA,CAAC,CAACc,KAAF,GAAU,YAAM;AACZd,IAAAA,CAAC,CAACe,YAAF,CAAe,IAAf,EAAqB,GAArB;AACH,GAFD;;AAIAf,EAAAA,CAAC,CAACgB,IAAF,GAAS,YAAM;AACXhB,IAAAA,CAAC,CAACiB,UAAF,CAAa,CAAb;AACAjB,IAAAA,CAAC,CAACkB,QAAF;AACAlB,IAAAA,CAAC,CAACmB,WAAF,CAAcnB,CAAC,CAACoB,MAAhB;AACAC,IAAAA,gBAAgB;AAChBrB,IAAAA,CAAC,CAACsB,OAAF,CAAUtB,CAAC,CAACI,EAAZ,EAAgBJ,CAAC,CAACK,EAAlB,EAAsBL,CAAC,CAACY,MAAF,GAAW,CAAjC,EAAoCZ,CAAC,CAACY,MAAF,GAAW,CAA/C;AACH,GAND;;AAQF,MAAOS,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC1B,QAAIrB,CAAC,CAACI,EAAF,GAAOJ,CAAC,CAACuB,KAAF,GAAQvB,CAAC,CAACY,MAAjB,IAA2BZ,CAAC,CAACK,EAAF,GAAOL,CAAC,CAACwB,MAAF,GAASxB,CAAC,CAACY,MAAjD,EAA0D;AACtDZ,MAAAA,CAAC,CAACiB,UAAF,CAAa,MAAb;AACAjB,MAAAA,CAAC,CAACS,EAAF,GAAK,CAAL;AACCT,MAAAA,CAAC,CAACO,EAAF,GAAK,CAAL;AACJ,KAJD,MAKK;AACDP,MAAAA,CAAC,CAACI,EAAF,IAAQJ,CAAC,CAACO,EAAV;AACAP,MAAAA,CAAC,CAACS,EAAF,GAAOT,CAAC,CAACS,EAAF,GAAOT,CAAC,CAACW,CAAF,GAAM,EAApB;AACAX,MAAAA,CAAC,CAACK,EAAF,IAAQL,CAAC,CAACS,EAAV;AACH,KAVyB,CAUzB;;;AAGDgB,IAAAA,OAAO,CAACC,GAAR,CAAY1B,CAAC,CAACI,EAAd,EAAiBJ,CAAC,CAACK,EAAnB;AACH,GAdH;AAeD;AAAA","sourcesContent":[" export default function (p)  {\r\n    p.theta = (45 * Math.PI) / 180;\r\n    p.x1 = 25;\r\n    p.y1 = 575;\r\n    p.TotalVelocity = 12; //this is tha canvas limit\r\n    p.Vx = p.TotalVelocity * Math.cos(p.theta);\r\n    p.Vy = p.TotalVelocity * Math.sin(p.theta);\r\n    p.g = 9.9;\r\n    p.radius=25;\r\n    p.Range = (p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta)) / p.g;\r\n\r\n    p.setup = () => {\r\n        p.createCanvas(1000, 600);\r\n    };\r\n\r\n    p.draw = () => {\r\n        p.background(0);\r\n        p.noStroke();\r\n        p.ellipseMode(p.CENTER);\r\n        ProjectileVector();\r\n        p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\r\n    };\r\n\r\n  const  ProjectileVector = () => {\r\n        if (p.x1 > p.width-p.radius || p.y1 > p.height-p.radius ) {\r\n            p.background('blue');\r\n            p.Vy=0;\r\n             p.Vx=0;\r\n        }\r\n        else {\r\n            p.x1 += p.Vx;\r\n            p.Vy = p.Vy - p.g / 60;\r\n            p.y1 -= p.Vy;\r\n        }//beacuse our coordinates works in opposite direction\r\n\r\n\r\n        console.log(p.x1,p.y1);\r\n    };\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}