{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\Movies.js\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport TableHead from \"./TableHead\";\nimport TableBody from \"./TableBody\";\nimport Pagination from \"./pagination\";\nimport ListGroup from \"./ListGroup\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      //not the right way by the way\n      genres: [],\n      PageSize: 4,\n      currentpage: 1\n    };\n\n    _this.handleDelete = function (the_id) {\n      var newarray = _this.state.movies.filter(function (w) {\n        return w._id !== the_id;\n      });\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handleLike = function (object) {\n      var newarray = _toConsumableArray(_this.state.movies);\n\n      var index = newarray.indexOf(object);\n      newarray[index].liked = !newarray[index].liked;\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentpage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      console.log(genre);\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        movies: getMovies(),\n        genres: getGenres()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var length = this.state.movies.length;\n      if (length === 0) return React.createElement(\"h1\", {\n        className: \"fontify badge badge-pill badge-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"no more movies in Database\");else return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: this.state.genres,\n        onItemSelect: this.handleGenreSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"fontify badge badge-pill badge-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Showing \", length, \" movies in Database\"), React.createElement(\"table\", {\n        className: \"table  table-condensed table-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        movies: this.state.movies,\n        PageSize: this.state.PageSize,\n        currentPage: this.state.currentpage,\n        onDelete: this.handleDelete,\n        onLike: this.handleLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(Pagination, {\n        itemsCount: this.state.movies.length,\n        PageSize: this.state.PageSize,\n        onPageChange: this.handlePageChange,\n        currentPage: this.state.currentpage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\Movies.js"],"names":["React","Component","getMovies","getGenres","TableHead","TableBody","Pagination","ListGroup","Movies","state","movies","genres","PageSize","currentpage","handleDelete","the_id","newarray","filter","w","_id","setState","handleLike","object","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","console","log","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AACM;AACZC,MAAAA,MAAM,EAAC,EAFD;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,WAAW,EAAE;AAJP,K;;UAiDRC,Y,GAAe,UAAAC,MAAM,EAAI;AACvB,UAAMC,QAAQ,GAAG,MAAKP,KAAL,CAAWC,MAAX,CAAkBO,MAAlB,CAAyB,UAAAC,CAAC,EAAI;AAC7C,eAAOA,CAAC,CAACC,GAAF,KAAUJ,MAAjB;AACD,OAFgB,CAAjB;;AAGA,YAAKK,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAAEM;AAAV,OAAd;AACD,K;;UACDK,U,GAAa,UAAAC,MAAM,EAAI;AACrB,UAAMN,QAAQ,sBAAO,MAAKP,KAAL,CAAWC,MAAlB,CAAd;;AACA,UAAIa,KAAK,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,MAAjB,CAAZ;AACAN,MAAAA,QAAQ,CAACO,KAAD,CAAR,CAAgBE,KAAhB,GAAwB,CAACT,QAAQ,CAACO,KAAD,CAAR,CAAgBE,KAAzC;;AACA,YAAKL,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAAEM;AAAV,OAAd;AACD,K;;UACDU,gB,GAAmB,UAAAC,IAAI,EAAI;AACzB,YAAKP,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEc;AAAf,OAAd;AACD,K;;UACDC,iB,GAAkB,UAACC,KAAD,EAAS;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,K;;;;;;;wCA5DiB;AACpB,WAAKT,QAAL,CAAc;AAACV,QAAAA,MAAM,EAACR,SAAS,EAAjB;AAAoBS,QAAAA,MAAM,EAACR,SAAS;AAApC,OAAd;AACC;;;6BAEU;AAAA,UACC6B,MADD,GACY,KAAKvB,KAAL,CAAWC,MADvB,CACCsB,MADD;AAEP,UAAIA,MAAM,KAAK,CAAf,EACE,OACE;AAAI,QAAA,SAAS,EAAC,uCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,KAOE,OACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWE,MAA7B;AAAqC,QAAA,YAAY,EAAE,KAAKiB,iBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,qCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWI,MADX,wBADF,EAIE;AAAO,QAAA,SAAS,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWC,MADrB;AAEE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,QAFvB;AAGE,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWI,WAH1B;AAIE,QAAA,QAAQ,EAAE,KAAKC,YAJjB;AAKE,QAAA,MAAM,EAAE,KAAKO,UALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,EAcE,oBAAC,UAAD;AACE,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWC,MAAX,CAAkBsB,MADhC;AAEE,QAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWG,QAFvB;AAGE,QAAA,YAAY,EAAE,KAAKc,gBAHrB;AAIE,QAAA,WAAW,EAAE,KAAKjB,KAAL,CAAWI,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CAJF,CADF;AA4BH;;;;EAhDkBZ,S;;AAsErB,eAAeO,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport {getGenres} from \"../services/fakeGenreService\";\r\nimport TableHead from \"./TableHead\";\r\nimport TableBody from \"./TableBody\";\r\nimport Pagination from \"./pagination\";\r\nimport ListGroup from \"./ListGroup\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [], //not the right way by the way\r\n    genres:[],\r\n    PageSize: 4,\r\n    currentpage: 1\r\n  };\r\ncomponentDidMount() {\r\nthis.setState({movies:getMovies(),genres:getGenres()});\r\n}\r\n\r\n  render() {\r\n    const { length } = this.state.movies;\r\n    if (length === 0)\r\n      return (\r\n        <h1 className=\"fontify badge badge-pill badge-danger\">\r\n          no more movies in Database\r\n        </h1>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <ListGroup items={this.state.genres} onItemSelect={this.handleGenreSelect} />\r\n          </div>\r\n          <div className=\"col\">\r\n            <h1 className=\"fontify badge badge-pill badge-info\">\r\n              Showing {length} movies in Database\r\n            </h1>\r\n            <table className=\"table  table-condensed table-sm\">\r\n              <TableHead />\r\n              <TableBody\r\n                movies={this.state.movies}\r\n                PageSize={this.state.PageSize}\r\n                currentPage={this.state.currentpage}\r\n                onDelete={this.handleDelete}\r\n                onLike={this.handleLike}\r\n              />\r\n            </table>\r\n            <Pagination\r\n              itemsCount={this.state.movies.length}\r\n              PageSize={this.state.PageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={this.state.currentpage}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  handleDelete = the_id => {\r\n    const newarray = this.state.movies.filter(w => {\r\n      return w._id !== the_id;\r\n    });\r\n    this.setState({ movies: newarray });\r\n  };\r\n  handleLike = object => {\r\n    const newarray = [...this.state.movies];\r\n    let index = newarray.indexOf(object);\r\n    newarray[index].liked = !newarray[index].liked;\r\n    this.setState({ movies: newarray });\r\n  };\r\n  handlePageChange = page => {\r\n    this.setState({ currentpage: page });\r\n  };\r\n  handleGenreSelect=(genre)=>{\r\n    console.log(genre);\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}