{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\TableBody.js\";\nimport React, { Component } from \"react\";\nimport _ from 'lodash';\n/*\r\nclass TableBody extends Component {\r\n  render() {\r\n    return <tbody>{this.body()}</tbody>;\r\n  }\r\n  body = () => {\r\n    const { data: allMovies } = this.props;\r\n\r\n    return allMovies.map(movie => {\r\n      return (\r\n        <tr key={movie._id}>\r\n          <td className=\"fontify\">{movie.title}</td>\r\n          <td className=\"fontify\">{movie.genre.name}</td>\r\n          <td className=\"fontify\">{movie.numberInStock}</td>\r\n          <td className=\"fontify\">{movie.dailyRentalRate}</td>\r\n          <td className=\"fontify\">\r\n            <button\r\n              className=\"btn btn-info m-2\"\r\n              onClick={() => this.props.onLike(movie)}\r\n            >\r\n              <Like liked={movie.liked} />\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => this.props.onDelete(movie._id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n}\r\n*/\n\nvar TableBody =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableBody, _Component);\n\n  function TableBody() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableBody);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableBody)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.CreateKey = function (item, column) {\n      return item._id + (column.path || column.key);\n    };\n\n    _this.renderCell = function (item, column) {\n      if (column.content) return column.content(item);else return _.get(item, column.path);\n    };\n\n    return _this;\n  }\n\n  _createClass(TableBody, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          columns = _this$props.columns;\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, data.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, columns.map(function (column) {\n          return React.createElement(\"td\", {\n            key: _this2.CreateKey(item, column),\n            className: \"fontify\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, _this2.renderCell(item, column));\n        }));\n      }));\n    }\n  }]);\n\n  return TableBody;\n}(Component);\n\nexport default TableBody;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\TableBody.js"],"names":["React","Component","_","TableBody","CreateKey","item","column","_id","path","key","renderCell","content","get","props","data","columns","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoCMC,S;;;;;;;;;;;;;;;;;;UAsBJC,S,GAAY,UAASC,IAAT,EAAeC,MAAf,EAAuB;AACjC,aAAOD,IAAI,CAACE,GAAL,IAAYD,MAAM,CAACE,IAAP,IAAeF,MAAM,CAACG,GAAlC,CAAP;AACD,K;;UACDC,U,GAAW,UAACL,IAAD,EAAMC,MAAN,EAAe;AACxB,UAAGA,MAAM,CAACK,OAAV,EAAmB,OAAOL,MAAM,CAACK,OAAP,CAAeN,IAAf,CAAP,CAAnB,KAGE,OAAOH,CAAC,CAACU,GAAF,CAAMP,IAAN,EAAWC,MAAM,CAACE,IAAlB,CAAP;AACH,K;;;;;;;6BA7BQ;AAAA;;AAAA,wBACmB,KAAKK,KADxB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,OADP,eACOA,OADP;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,GAAL,CAAS,UAAAX,IAAI;AAAA,eACZ;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGQ,OAAO,CAACC,GAAR,CAAY,UAAAV,MAAM;AAAA,iBACjB;AACI,YAAA,GAAG,EAAE,MAAI,CAACF,SAAL,CAAeC,IAAf,EAAqBC,MAArB,CADT;AAEI,YAAA,SAAS,EAAC,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIK,MAAI,CAACI,UAAL,CAAgBL,IAAhB,EAAsBC,MAAtB,CAJL,CADiB;AAAA,SAAlB,CADH,CADY;AAAA,OAAb,CADH,CADF;AAiBD;;;;EApBqBL,S;;AAoCxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport _ from 'lodash';\r\n\r\n/*\r\nclass TableBody extends Component {\r\n  render() {\r\n    return <tbody>{this.body()}</tbody>;\r\n  }\r\n  body = () => {\r\n    const { data: allMovies } = this.props;\r\n\r\n    return allMovies.map(movie => {\r\n      return (\r\n        <tr key={movie._id}>\r\n          <td className=\"fontify\">{movie.title}</td>\r\n          <td className=\"fontify\">{movie.genre.name}</td>\r\n          <td className=\"fontify\">{movie.numberInStock}</td>\r\n          <td className=\"fontify\">{movie.dailyRentalRate}</td>\r\n          <td className=\"fontify\">\r\n            <button\r\n              className=\"btn btn-info m-2\"\r\n              onClick={() => this.props.onLike(movie)}\r\n            >\r\n              <Like liked={movie.liked} />\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => this.props.onDelete(movie._id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n}\r\n*/\r\n\r\nclass TableBody extends Component {\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td\r\n                  key={this.CreateKey(item, column)}\r\n                  className=\"fontify\"\r\n              >\r\n                  {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n\r\n      </tbody>\r\n    );\r\n  }\r\n\r\n  CreateKey = function(item, column) {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n  renderCell=(item,column)=>{\r\n    if(column.content) return column.content(item);\r\n\r\n    else\r\n      return _.get(item,column.path)\r\n  };\r\n\r\n\r\n\r\n}\r\n\r\nexport default TableBody;\r\n"]},"metadata":{},"sourceType":"module"}