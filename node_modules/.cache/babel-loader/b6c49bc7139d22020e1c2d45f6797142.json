{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _glamor = require('glamor');\n\nvar _constant = require('./constant');\n\nvar _defaultStyle = require('./defaultStyle');\n\nvar _defaultStyle2 = _interopRequireDefault(_defaultStyle);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar trackProgress = _glamor.css.keyframes({\n  '0%': {\n    width: '100%'\n  },\n  '100%': {\n    width: 0\n  }\n});\n\nvar styles = function styles(type, isRunning, hide, delay, rtl) {\n  return (0, _glamor.css)(_extends({\n    position: 'absolute',\n    bottom: 0,\n    width: 0,\n    height: '5px',\n    zIndex: _defaultStyle2.default.zIndex,\n    opacity: hide ? 0 : 0.7,\n    animation: trackProgress + ' linear 1',\n    animationPlayState: isRunning ? 'running' : 'paused',\n    animationDuration: delay + 'ms',\n    backgroundColor: 'rgba(255,255,255,.7)'\n  }, type === 'default' ? {\n    // uumm, ok I was lazy\n    background: rtl ? _defaultStyle2.default.colorProgressDefault.replace('to right', 'to left') : _defaultStyle2.default.colorProgressDefault\n  } : {}, rtl ? {\n    right: 0\n  } : {\n    left: 0\n  }));\n};\n\nfunction ProgressBar(_ref) {\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      rtl = _ref.rtl;\n  return _react2.default.createElement('div', _extends({}, (0, _glamor.css)(styles(type, isRunning, hide, delay, rtl), typeof className !== 'string' && className), typeof className === 'string' && {\n    className: className\n  }, {\n    onAnimationEnd: closeToast\n  }));\n}\n\nProgressBar.propTypes = {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: _propTypes2.default.number.isRequired,\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: _propTypes2.default.bool.isRequired,\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: _propTypes2.default.func.isRequired,\n\n  /**\n   * Support rtl content\n   */\n  rtl: _propTypes2.default.bool.isRequired,\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: _propTypes2.default.string,\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide: _propTypes2.default.bool,\n\n  /**\n   * Optionnal className\n   */\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])\n};\nProgressBar.defaultProps = {\n  type: _constant.TYPE.DEFAULT,\n  hide: false,\n  className: ''\n};\nexports.default = ProgressBar;","map":null,"metadata":{},"sourceType":"script"}