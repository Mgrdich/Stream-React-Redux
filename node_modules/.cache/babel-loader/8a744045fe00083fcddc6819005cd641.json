{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\TableStream.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../Reusable/Table\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Reusable/Pagination\";\nimport { paginate } from \"../../utility/paginate\";\nimport SearchBar from \"../Reusable/SearchBar\";\nimport { SimplifyByReg } from \"../../utility/SearchRegExp\";\n\nvar TableStream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableStream, _Component);\n\n  function TableStream() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableStream);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableStream)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      PageSize: 4,\n      currentpage: 1,\n      search: \"\"\n    };\n    _this.columns = [{\n      label: \"Title\",\n      key: \"Link\",\n      content: function content(stream) {\n        return React.createElement(Link, {\n          to: \"/streams/\".concat(stream.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, stream.title);\n      }\n    }, {\n      path: \"description\",\n      label: \"Description\"\n    }, {\n      key: \"Buttons\",\n      content: function content(stream) {\n        if (stream.userId === _this.props.currentUserId) return React.createElement(Link, {\n          to: \"/streams/delete/\".concat(stream.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    }, {\n      key: \"Buttons1\",\n      content: function content(stream) {\n        if (stream.userId === _this.props.currentUserId) return React.createElement(Link, {\n          to: \"/streams/edit/\".concat(stream.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-dark btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Edit\"));\n      }\n    }];\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentpage: page\n      });\n    };\n\n    _this.handleSearchChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(TableStream, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderCreateStreamB\",\n    value: function renderCreateStreamB() {\n      if (this.props.isSignedIn) {\n        return React.createElement(Link, {\n          to: \"streams/new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-dark btn-lg m-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Create Stream\"));\n      }\n    }\n  }, {\n    key: \"GetPageData\",\n    value: function GetPageData() {\n      //the ultimate function for what we are giving to our table to render on the table\n      var select = this.state.select;\n      var streams = this.props.streams;\n      var _this$state = this.state,\n          currentpage = _this$state.currentpage,\n          PageSize = _this$state.PageSize;\n\n      if (!select) {\n        console.log(\"i am at paginate\");\n        return paginate(streams, currentpage, PageSize);\n      } else {\n        var RecievedArray = SimplifyByReg(streams, select);\n        console.log(\"i am finally arrived\");\n        console.log(RecievedArray);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //  console.log(this.state.search); //this proves that we already fetched the data from rhe rest API\n      var streams = this.props.streams;\n      this.GetPageData();\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onChange: this.handleSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Table, {\n        columns: this.columns,\n        data: this.GetPageData(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: streams.length,\n        PageSize: this.state.PageSize,\n        onPageChange: this.handlePageChange,\n        currentPage: this.state.currentpage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), this.renderCreateStreamB());\n    }\n  }]);\n\n  return TableStream;\n}(Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    streams: Object.values(state.STreams),\n    //converting the object to array\n    isSignedIn: state.authReducer.isSignedIn,\n    currentUserId: state.authReducer.userId\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  fetchStreams: fetchStreams\n})(TableStream);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\TableStream.js"],"names":["React","Component","Table","connect","fetchStreams","Link","Pagination","paginate","SearchBar","SimplifyByReg","TableStream","state","PageSize","currentpage","search","columns","label","key","content","stream","id","title","path","userId","props","currentUserId","handlePageChange","page","setState","handleSearchChange","event","target","name","value","isSignedIn","select","streams","console","log","RecievedArray","GetPageData","length","renderCreateStreamB","mapStatetoProps","Object","values","STreams","authReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"../Reusable/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStreams } from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"../Reusable/Pagination\";\r\nimport { paginate } from \"../../utility/paginate\";\r\nimport SearchBar from \"../Reusable/SearchBar\";\r\nimport {SimplifyByReg} from \"../../utility/SearchRegExp\";\r\n\r\nclass TableStream extends Component {\r\n  //this table stream will come with pagination\r\n  state = {\r\n    PageSize: 4,\r\n    currentpage: 1,\r\n    search: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStreams();\r\n  }\r\n  renderCreateStreamB() {\r\n    if (this.props.isSignedIn) {\r\n      return (\r\n        <Link to=\"streams/new\">\r\n          <button className=\"btn btn-dark btn-lg m-5\">Create Stream</button>\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n  columns = [\r\n    {\r\n      label: \"Title\",\r\n      key: \"Link\",\r\n      content: stream => (\r\n        <Link to={`/streams/${stream.id}`}>{stream.title}</Link>\r\n      )\r\n    },\r\n    { path: \"description\", label: \"Description\" },\r\n    {\r\n      key: \"Buttons\",\r\n      content: stream => {\r\n        if (stream.userId === this.props.currentUserId)\r\n          return (\r\n            <Link to={`/streams/delete/${stream.id}`}>\r\n              <button className=\"btn btn-danger btn-sm\">Delete</button>\r\n            </Link>\r\n          );\r\n      }\r\n    },\r\n    {\r\n      key: \"Buttons1\",\r\n      content: stream => {\r\n        if (stream.userId === this.props.currentUserId)\r\n          return (\r\n            <Link to={`/streams/edit/${stream.id}`}>\r\n              <button className=\"btn btn-dark btn-sm\">Edit</button>\r\n            </Link>\r\n          );\r\n      }\r\n    }\r\n  ];\r\n  handlePageChange = page => {\r\n    this.setState({ currentpage: page });\r\n  };\r\n\r\n  GetPageData() {\r\n    //the ultimate function for what we are giving to our table to render on the table\r\n    const { select } = this.state;\r\n    const { streams } = this.props;\r\n    const { currentpage, PageSize } = this.state;\r\n    if (!select) {\r\n      console.log(\"i am at paginate\");\r\n      return paginate(streams, currentpage, PageSize);\r\n\r\n    }\r\n    else {\r\n      const RecievedArray = SimplifyByReg(streams,select);\r\n      console.log(\"i am finally arrived\");\r\n      console.log(RecievedArray);\r\n    }\r\n  }\r\n  handleSearchChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value});\r\n  };\r\n  render() {\r\n  //  console.log(this.state.search); //this proves that we already fetched the data from rhe rest API\r\n    const { streams } = this.props;\r\n    this.GetPageData();\r\n    return (\r\n      <div className=\"container\">\r\n        <SearchBar onChange={this.handleSearchChange}/>\r\n        <Table columns={this.columns} data={this.GetPageData()} />\r\n        <Pagination\r\n          itemsCount={streams.length}\r\n          PageSize={this.state.PageSize}\r\n          onPageChange={this.handlePageChange}\r\n          currentPage={this.state.currentpage}\r\n        />\r\n        {this.renderCreateStreamB()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    streams: Object.values(state.STreams), //converting the object to array\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n    currentUserId: state.authReducer.userId\r\n  };\r\n};\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { fetchStreams }\r\n)(TableStream);\r\n"]},"metadata":{},"sourceType":"module"}