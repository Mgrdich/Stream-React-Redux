{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\MovieForm.js\";\nimport React from \"react\";\nimport Form from \"./Form\";\nimport Joi from \"joi-browser\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\n\nvar MovieForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(MovieForm, _Form);\n\n  function MovieForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MovieForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MovieForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        title: \"\",\n        genre: \"\",\n        NumberStock: \"\",\n        rate: \"\"\n      },\n      //lets for now forget the genre properties\n      error: {},\n      genres: []\n    };\n    _this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      NumberStock: Joi.number().required().min(0).max(100),\n      rate: Joi.number().required().min(0).max(10),\n      genre: Joi.string().required().label(\"Genre\")\n    };\n\n    _this.doSubmit = function () {\n      console.log(\"Submitted\");\n      var _this$state$data = _this.state.data,\n          _id = _this$state$data._id,\n          title = _this$state$data.title,\n          genreId = _this$state$data.genre,\n          numberInStock = _this$state$data.NumberStock,\n          dailyRentalRate = _this$state$data.rate;\n      var objMovie = {\n        _id: _id,\n        title: title,\n        genreId: genreId,\n        numberInStock: numberInStock,\n        dailyRentalRate: dailyRentalRate\n      };\n      saveMovie(objMovie); // console.log(this.state.data);\n\n      _this.props.history.push(\"/movies\");\n    };\n\n    _this.changingDBtodta = function (movie) {\n      return {\n        _id: movie._id,\n        title: movie.title,\n        genre: movie.genre._id,\n        NumberStock: movie.numberInStock,\n        rate: movie.dailyRentalRate\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(MovieForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = getGenres();\n      this.setState({\n        genres: genres\n      });\n      var movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      var movie = getMovie(movieId);\n      if (!movie) return this.props.history.replace(\"/not-found\");\n      this.setState({\n        data: this.changingDBtodta(movie)\n      });\n      console.log(this.changingDBtodta(movie));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"backk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Movie Form\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.renderInput(\"title\", \"Title\"), this.renderSelect(\"genre\", \"Genre\", this.state.genres), this.renderInput(\"NumberStock\", \"Number in Stock\"), this.renderInput(\"rate\", \"Rate\"), this.renderButton(\"Submit\")));\n    }\n  }]);\n\n  return MovieForm;\n}(Form);\n\nexport default MovieForm;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\MovieForm.js"],"names":["React","Form","Joi","getGenres","getMovie","saveMovie","MovieForm","state","data","title","genre","NumberStock","rate","error","genres","schema","_id","string","required","label","number","min","max","doSubmit","console","log","genreId","numberInStock","dailyRentalRate","objMovie","props","history","push","changingDBtodta","movie","setState","movieId","match","params","id","replace","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport Joi from \"joi-browser\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genre: \"\", NumberStock: \"\", rate: \"\" }, //lets for now forget the genre properties\r\n    error: {},\r\n    genres: []\r\n  };\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    NumberStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100),\r\n    rate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10),\r\n    genre: Joi.string()\r\n      .required()\r\n      .label(\"Genre\")\r\n  };\r\n\r\n  doSubmit = () => {\r\n    console.log(\"Submitted\");\r\n    const {\r\n      _id,\r\n      title: title,\r\n      genre: genreId,\r\n      NumberStock: numberInStock,\r\n      rate: dailyRentalRate\r\n    } = this.state.data;\r\n\r\n    const objMovie = {\r\n      _id: _id,\r\n      title: title,\r\n      genreId: genreId,\r\n      numberInStock: numberInStock,\r\n      dailyRentalRate: dailyRentalRate\r\n    };\r\n    saveMovie(objMovie);\r\n    // console.log(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n  componentDidMount() {\r\n    const genres = getGenres();\r\n    this.setState({ genres });\r\n\r\n    const movieId = this.props.match.params.id;\r\n    if (movieId === \"new\") return;\r\n\r\n    const movie = getMovie(movieId);\r\n    if (!movie) return this.props.history.replace(\"/not-found\");\r\n\r\n    this.setState({ data: this.changingDBtodta(movie) });\r\n    console.log(this.changingDBtodta(movie));\r\n  }\r\n\r\n  changingDBtodta = movie => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genre: movie.genre._id,\r\n      NumberStock: movie.numberInStock,\r\n      rate: movie.dailyRentalRate\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <h1 className=\"backk\">Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genre\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"NumberStock\", \"Number in Stock\")}\r\n          {this.renderInput(\"rate\", \"Rate\")}\r\n          {this.renderButton(\"Submit\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n"]},"metadata":{},"sourceType":"module"}