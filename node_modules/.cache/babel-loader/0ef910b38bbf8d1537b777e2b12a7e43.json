{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\components\\\\Movies.js\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./pagination\";\nimport ListGroup from \"./ListGroup\";\nimport MoviesTable from \"./MoviesTable\";\nimport _ from \"lodash\";\nimport { paginate } from \"../utility/paginate\";\nimport { Link } from \"react-router-dom\";\nimport Searchbox from \"./Searchbox\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      //not the right way by the way\n      genres: [],\n      PageSize: 4,\n      currentpage: 1,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      },\n      search: \"\"\n    };\n\n    _this.getPageData = function () {\n      var _this$state = _this.state,\n          selectedGenre = _this$state.selectedGenre,\n          allMovies = _this$state.movies,\n          currentpage = _this$state.currentpage,\n          PageSize = _this$state.PageSize,\n          sortColumn = _this$state.sortColumn,\n          search = _this$state.search;\n\n      if (_this.state.search !== \"\") {\n        var regular = new RegExp(_this.state.search, \"i\");\n\n        var RegMov = _this.state.movies.filter(function (m) {\n          return !m.title.search(regular);\n        });\n\n        var filtered_movies = selectedGenre && selectedGenre._id ? RegMov.filter(function (m) {\n          return m.genre._id === selectedGenre._id;\n        }) : RegMov;\n\n        var sorted = _.orderBy(filtered_movies, [sortColumn.path], [sortColumn.order]);\n\n        var movies = paginate(sorted, currentpage, PageSize);\n        return {\n          movies: movies,\n          SomeLength: filtered_movies.length\n        };\n      } else {\n        var _filtered_movies = selectedGenre && selectedGenre._id ? allMovies.filter(function (m) {\n          return m.genre._id === selectedGenre._id;\n        }) : allMovies;\n\n        var _sorted = _.orderBy(_filtered_movies, [sortColumn.path], [sortColumn.order]);\n\n        var _movies = paginate(_sorted, currentpage, PageSize);\n\n        return {\n          movies: _movies,\n          SomeLength: _filtered_movies.length\n        };\n      }\n    };\n\n    _this.handleDelete = function (the_id) {\n      var newarray = _this.state.movies.filter(function (w) {\n        return w._id !== the_id;\n      });\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handleLike = function (object) {\n      var newarray = _toConsumableArray(_this.state.movies);\n\n      var index = newarray.indexOf(object);\n      newarray[index].liked = !newarray[index].liked;\n\n      _this.setState({\n        movies: newarray\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentpage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        currentpage: 1\n      });\n    };\n\n    _this.handleSort = function (ob) {\n      _this.setState({\n        sortColumn: ob\n      });\n    };\n\n    _this.handleSearchChange = function (event) {\n      var _this$setState;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"selectedGenre\", null), _this$setState));\n    };\n\n    _this.abbrevia = function () {\n      var _this$state2 = _this.state,\n          currentpage = _this$state2.currentpage,\n          PageSize = _this$state2.PageSize,\n          sortColumn = _this$state2.sortColumn,\n          search = _this$state2.search;\n\n      var _this$getPageData = _this.getPageData(),\n          movies = _this$getPageData.movies,\n          SomeLength = _this$getPageData.SomeLength;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(MoviesTable, {\n        movies: movies,\n        handleDelete: _this.handleDelete,\n        handleLike: _this.handleLike,\n        onSort: _this.handleSort,\n        sortColumn: sortColumn,\n        onLike: _this.handleLike,\n        onDelete: _this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: SomeLength,\n        PageSize: PageSize,\n        onPageChange: _this.handlePageChange,\n        currentPage: currentpage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = [{\n        name: \"All Genres\",\n        _id: \"\"\n      }].concat(_toConsumableArray(getGenres()));\n      this.setState({\n        movies: getMovies(),\n        genres: genres\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /*let regular=new RegExp(this.state.search,'i');\r\n        const  RegMov=this.state.movies.filter(\r\n          (m)=> (!m.title.search(regular))\r\n      );\r\n      console.log(RegMov);*/\n      var _this$state3 = this.state,\n          currentpage = _this$state3.currentpage,\n          PageSize = _this$state3.PageSize,\n          sortColumn = _this$state3.sortColumn,\n          search = _this$state3.search;\n\n      var _this$getPageData2 = this.getPageData(),\n          movies = _this$getPageData2.movies,\n          SomeLength = _this$getPageData2.SomeLength;\n\n      if (SomeLength === 0 && search === \"\") return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"fontify badge badge-pill badge-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"no more movies in Database\"));else return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: this.state.genres,\n        onItemSelect: this.handleGenreSelect,\n        selectedItem: this.state.selectedGenre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"fontify alert  alert-info d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Showing \", React.createElement(\"span\", {\n        className: \"badge badge-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, SomeLength), \" \", \"movies in Database\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/movies/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm fontify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"New Movie\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Searchbox, {\n        onChange: this.handleSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), SomeLength === 0 && search !== 0 ? React.createElement(\"h1\", {\n        className: \"fontify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"No result found\") : this.abbrevia()));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\components\\Movies.js"],"names":["React","Component","getMovies","getGenres","Pagination","ListGroup","MoviesTable","_","paginate","Link","Searchbox","Movies","state","movies","genres","PageSize","currentpage","sortColumn","path","order","search","getPageData","selectedGenre","allMovies","regular","RegExp","RegMov","filter","m","title","filtered_movies","_id","genre","sorted","orderBy","SomeLength","length","handleDelete","the_id","newarray","w","setState","handleLike","object","index","indexOf","liked","handlePageChange","page","handleGenreSelect","handleSort","ob","handleSearchChange","event","target","name","value","abbrevia"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Pagination from \"./pagination\";\r\nimport ListGroup from \"./ListGroup\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport _ from \"lodash\";\r\nimport { paginate } from \"../utility/paginate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Searchbox from \"./Searchbox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [], //not the right way by the way\r\n    genres: [],\r\n    PageSize: 4,\r\n    currentpage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    search: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genres: genres });\r\n  }\r\n  getPageData = () => {\r\n    const {\r\n      selectedGenre,\r\n      movies: allMovies,\r\n      currentpage,\r\n      PageSize,\r\n      sortColumn,\r\n      search\r\n    } = this.state;\r\n\r\n    if (this.state.search !== \"\") {\r\n      let regular = new RegExp(this.state.search, \"i\");\r\n\r\n      let RegMov = this.state.movies.filter(m => !m.title.search(regular));\r\n      const filtered_movies =\r\n        selectedGenre && selectedGenre._id\r\n          ? RegMov.filter(m => m.genre._id === selectedGenre._id)\r\n          : RegMov;\r\n\r\n      const sorted = _.orderBy(\r\n        filtered_movies,\r\n        [sortColumn.path],\r\n        [sortColumn.order]\r\n      );\r\n\r\n      const movies = paginate(sorted, currentpage, PageSize);\r\n      return { movies, SomeLength: filtered_movies.length };\r\n    } else {\r\n      const filtered_movies =\r\n        selectedGenre && selectedGenre._id\r\n          ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n          : allMovies;\r\n\r\n      const sorted = _.orderBy(\r\n        filtered_movies,\r\n        [sortColumn.path],\r\n        [sortColumn.order]\r\n      );\r\n\r\n      const movies = paginate(sorted, currentpage, PageSize);\r\n      return { movies, SomeLength: filtered_movies.length };\r\n    }\r\n  };\r\n\r\n  render() {\r\n    /*let regular=new RegExp(this.state.search,'i');\r\n\r\n    const  RegMov=this.state.movies.filter(\r\n        (m)=> (!m.title.search(regular))\r\n    );\r\n    console.log(RegMov);*/\r\n\r\n    const { currentpage, PageSize, sortColumn, search } = this.state;\r\n\r\n    const { movies, SomeLength } = this.getPageData();\r\n\r\n    if (SomeLength === 0 && search === \"\")\r\n      return (\r\n        <React.Fragment>\r\n          <h1 className=\"fontify badge badge-pill badge-danger\">\r\n            no more movies in Database\r\n          </h1>\r\n        </React.Fragment>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <ListGroup\r\n              items={this.state.genres}\r\n              onItemSelect={this.handleGenreSelect}\r\n              selectedItem={this.state.selectedGenre}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <br />\r\n            <span className=\"fontify alert  alert-info d-inline-block\">\r\n              Showing <span className=\"badge badge-light\">{SomeLength}</span>{\" \"}\r\n              movies in Database\r\n            </span>\r\n            <br />\r\n            <Link to=\"/movies/new\">\r\n              <button className=\"btn btn-primary btn-sm fontify\">\r\n                New Movie\r\n              </button>\r\n            </Link>\r\n            <br />\r\n\r\n            <Searchbox onChange={this.handleSearchChange} />\r\n            <br />\r\n            {/*{\r\n              (search===\"\") ?(<React.Fragment><MoviesTable\r\n              movies={movies}\r\n              handleDelete={this.handleDelete}\r\n              handleLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              />\r\n              <Pagination\r\n              itemsCount={SomeLength}\r\n              PageSize={PageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentpage}\r\n              /></React.Fragment>):(\r\n            <MoviesTable\r\n              movies={RegMov}\r\n              handleDelete={this.handleDelete}\r\n              handleLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n            />)\r\n\r\n            }*/}\r\n            {(SomeLength===0 && search!==0)?<h1 className=\"fontify\">No result found</h1>:this.abbrevia()}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  handleDelete = the_id => {\r\n    const newarray = this.state.movies.filter(w => {\r\n      return w._id !== the_id;\r\n    });\r\n    this.setState({ movies: newarray });\r\n  };\r\n\r\n  handleLike = object => {\r\n    const newarray = [...this.state.movies];\r\n    let index = newarray.indexOf(object);\r\n    newarray[index].liked = !newarray[index].liked;\r\n    this.setState({ movies: newarray });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentpage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentpage: 1 });\r\n  };\r\n\r\n  handleSort = ob => {\r\n    this.setState({ sortColumn: ob });\r\n  };\r\n  handleSearchChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value, selectedGenre: null });\r\n  };\r\n  abbrevia = () => {\r\n    const { currentpage, PageSize, sortColumn, search } = this.state;\r\n    const { movies, SomeLength } = this.getPageData();\r\n    return (\r\n        <React.Fragment>\r\n          <MoviesTable\r\n            movies={movies}\r\n            handleDelete={this.handleDelete}\r\n            handleLike={this.handleLike}\r\n            onSort={this.handleSort}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n        />\r\n          <Pagination\r\n              itemsCount={SomeLength}\r\n              PageSize={PageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentpage}\r\n          /></React.Fragment>\r\n\r\n    );\r\n  };\r\n\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}