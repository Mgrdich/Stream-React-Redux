{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\Stream\\\\src\\\\Components\\\\Streams\\\\StreamList.js\";\nimport React from \"react\"; //import { connect } from \"react-redux\";\n//import { fetchStreams } from \"../../actions\";\n//import { Link } from \"react-router-dom\";\n\nimport TableStream from \"./TableStream\";\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"render\",\n\n    /* componentDidMount() {\r\n       this.props.fetchStreams(); //in the action creator which will give us an array of fetched data\r\n     }*/\n\n    /*renderAdminB(stream) {\r\n      //console.log(\"this.props\",this.props.currentUserId);\r\n      if (stream.userId === this.props.currentUserId)\r\n        //this props is coming from from the signned in user\r\n        return (\r\n          <div className=\"right floated content\">\r\n            <Link to={`/streams/delete/${stream.id}`}>\r\n              <button className=\"btn btn-danger btn-md m-1\">Delete</button>\r\n            </Link>\r\n            <Link to={`/streams/edit/${stream.id}`}>\r\n              <button className=\"btn btn-dark btn-md\">Edit</button>\r\n            </Link>\r\n          </div>\r\n        );\r\n    }\r\n    renderStream() {\r\n        const { streams } = this.props;\r\n      //  console.log(streams);\r\n      return streams.map(stream => {\r\n        return (\r\n          <div className=\"item\" key={stream.id}>\r\n            {this.renderAdminB(stream)}\r\n            <i className=\"large middle aligned icon camera\" />\r\n            <div className=\"content\">\r\n              {stream.title}\r\n              <div className=\"description\">{stream.description}</div>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    renderCreateStreamB() {\r\n      if (this.props.isSignedIn) {\r\n        return (\r\n          <Link to=\"streams/new\">\r\n            <button className=\"btn btn-dark btn-lg m-5\">Create Stream</button>\r\n          </Link>\r\n        );\r\n      }\r\n    }*/\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(TableStream, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n/*const mapStatetoProps = state => {\r\n  return {\r\n    streams: Object.values(state.STreams), //converting the object  values to array\r\n    currentUserId: state.authReducer.userId,\r\n    isSignedIn: state.authReducer.isSignedIn\r\n  };\r\n};*/\n\n\nexport default StreamList;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\Stream\\src\\Components\\Streams\\StreamList.js"],"names":["React","TableStream","StreamList","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,U;;;;;;;;;;;;;;AACL;;;;AAGC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA0CS;AACP,aACE,0CACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF;AAKD;;;;EApDsBF,KAAK,CAACG,S;AAsD/B;;;;;;;;;AAOA,eAAeD,UAAf","sourcesContent":["import React from \"react\";\r\n//import { connect } from \"react-redux\";\r\n//import { fetchStreams } from \"../../actions\";\r\n//import { Link } from \"react-router-dom\";\r\nimport TableStream from \"./TableStream\";\r\n\r\nclass StreamList extends React.Component {\r\n /* componentDidMount() {\r\n    this.props.fetchStreams(); //in the action creator which will give us an array of fetched data\r\n  }*/\r\n  /*renderAdminB(stream) {\r\n    //console.log(\"this.props\",this.props.currentUserId);\r\n    if (stream.userId === this.props.currentUserId)\r\n      //this props is coming from from the signned in user\r\n      return (\r\n        <div className=\"right floated content\">\r\n          <Link to={`/streams/delete/${stream.id}`}>\r\n            <button className=\"btn btn-danger btn-md m-1\">Delete</button>\r\n          </Link>\r\n          <Link to={`/streams/edit/${stream.id}`}>\r\n            <button className=\"btn btn-dark btn-md\">Edit</button>\r\n          </Link>\r\n        </div>\r\n      );\r\n  }\r\n  renderStream() {\r\n\r\n    const { streams } = this.props;\r\n    //  console.log(streams);\r\n    return streams.map(stream => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n          {this.renderAdminB(stream)}\r\n          <i className=\"large middle aligned icon camera\" />\r\n          <div className=\"content\">\r\n            {stream.title}\r\n            <div className=\"description\">{stream.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  renderCreateStreamB() {\r\n    if (this.props.isSignedIn) {\r\n      return (\r\n        <Link to=\"streams/new\">\r\n          <button className=\"btn btn-dark btn-lg m-5\">Create Stream</button>\r\n        </Link>\r\n      );\r\n    }\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n          <TableStream/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n/*const mapStatetoProps = state => {\r\n  return {\r\n    streams: Object.values(state.STreams), //converting the object  values to array\r\n    currentUserId: state.authReducer.userId,\r\n    isSignedIn: state.authReducer.isSignedIn\r\n  };\r\n};*/\r\nexport default StreamList;"]},"metadata":{},"sourceType":"module"}