{"ast":null,"code":"export default function (p) {\n  p.radius = 25;\n  p.theta = 45 * Math.PI / 180; //Input\n\n  p.x1 = p.windowWidth / 1.5 - p.radius;\n  p.y1 = p.windowHeight / 1.5 - p.radius;\n  p.TotalVelocity = 12; //this is tha canvas limit\n\n  p.Vx = p.TotalVelocity * Math.cos(p.theta);\n  p.Vy = p.TotalVelocity * Math.sin(p.theta);\n  p.g = 9.9; //input\n\n  p.Range = p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta) / p.g;\n\n  p.preload = function () {\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n      if (props.p5Props) {\n        //console.log(props.p5Props);\n        p.ButtonClicked = props.p5Props.start;\n      }\n    };\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n\n  p.draw = function () {\n    p.background(0);\n\n    if (p.ButtonClicked) {\n      p.noStroke();\n      p.ellipseMode(p.CENTER);\n      p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\n      ProjectileVector();\n    }\n  };\n\n  var ProjectileVector = function ProjectileVector() {\n    if (p.x1 > p.width - p.radius || p.y1 > p.height - p.radius) {\n      p.background(\"blue\");\n      p.Vy = 0;\n      p.Vx = 0;\n    } else {\n      p.x1 += p.Vx;\n      p.Vy = p.Vy - p.g / 60;\n      p.y1 -= p.Vy;\n    } //beacuse our coordinates works in opposite direction\n    //console.log(p.x1,p.y1);\n\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\sketch2.js"],"names":["p","radius","theta","Math","PI","x1","windowWidth","y1","windowHeight","TotalVelocity","Vx","cos","Vy","sin","g","Range","preload","myCustomRedrawAccordingToNewPropsHandler","props","p5Props","ButtonClicked","start","windowResized","resizeCanvas","setup","createCanvas","draw","background","noStroke","ellipseMode","CENTER","ellipse","ProjectileVector","width","height"],"mappings":"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","sourcesContent":["export default function(p) {\r\n  p.radius = 25;\r\n  p.theta = (45 * Math.PI) / 180; //Input\r\n  p.x1 = (p.windowWidth / 1.5) - p.radius;\r\n  p.y1 = (p.windowHeight/1.5) - p.radius;\r\n  p.TotalVelocity = 12; //this is tha canvas limit\r\n  p.Vx = p.TotalVelocity * Math.cos(p.theta);\r\n  p.Vy = p.TotalVelocity * Math.sin(p.theta);\r\n  p.g = 9.9;\r\n  //input\r\n  p.Range = (p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta)) / p.g;\r\n\r\n  p.preload = () => {\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      if (props.p5Props) {\r\n        //console.log(props.p5Props);\r\n        p.ButtonClicked = props.p5Props.start;\r\n      }\r\n    };\r\n  };\r\n\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n  p.setup = () => {\r\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.background(0);\r\n    if (p.ButtonClicked) {\r\n      p.noStroke();\r\n      p.ellipseMode(p.CENTER);\r\n        p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\r\n      ProjectileVector();\r\n\r\n    }\r\n  };\r\n\r\n  const ProjectileVector = () => {\r\n    if (p.x1 > p.width - p.radius || p.y1 > p.height - p.radius) {\r\n      p.background(\"blue\");\r\n      p.Vy = 0;\r\n      p.Vx = 0;\r\n    } else {\r\n      p.x1 += p.Vx;\r\n      p.Vy = p.Vy - p.g / 60;\r\n      p.y1 -= p.Vy;\r\n    } //beacuse our coordinates works in opposite direction\r\n\r\n    //console.log(p.x1,p.y1);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}