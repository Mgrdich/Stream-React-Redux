{"ast":null,"code":"export default function (p) {\n  p.velocity1Intial = 20;\n  p.velocity2Intial = -40;\n  p.mass1 = 20;\n  p.mass2 = 10;\n  p.TMass = p.mass1 + p.mass2;\n  /*p.height1 = 300;*/\n\n  /*p.height2 = 150;*/\n\n  /*p.width1 = 100;*/\n\n  /*p.width2 = 100;*/\n\n  p.preload = function () {\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n      if (props.p5Props.start) {\n        console.log(p.height1);\n        p.height1 = Number(props.p5Props.height1);\n        p.height2 = Number(props.p5Props.height2);\n        p.width1 = Number(props.p5Props.width1);\n        p.width2 = Number(props.p5Props.width2);\n        p.ButtonClicked = props.p5Props.start;\n        p.ButtonClickedR = props.p5Props.reset;\n        p.Inelastic = props.p5Props.Inelastic;\n        p.x1 = p.width1 / 2;\n        p.remainder = (p.windowWidth / 1.5 - p.width2 / 2 - p.width1 / 2) % (p.velocity1Intial + -p.velocity2Intial);\n        p.x2 = p.windowWidth / 1.5 - p.width2 / 2;\n        p.DetectCollison = false;\n      }\n    };\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n\n  p.draw = function () {\n    p.background(0);\n\n    if (p.ButtonClicked) {\n      if (!p.Inelastic) CollisionDetectElastic();else {\n        CollisonInelastic();\n      }\n      p.rectMode(p.CENTER);\n      p.fill(\"green\");\n      p.rect(p.x1, 200, p.width1, p.height1, 20);\n      p.fill(255, 204, 0);\n      p.rect(p.x2, 200, p.width2, p.height2, 20);\n    }\n  };\n\n  var CollisionDetectElastic = function CollisionDetectElastic() {\n    var velocity2Final = (2 * p.mass1 * p.velocity1Intial + p.velocity2Intial * (p.mass2 - p.mass1)) / p.TMass;\n    var velocity1Final = (2 * p.mass2 * p.velocity2Intial + p.velocity1Intial * (p.mass1 - p.mass2)) / p.TMass;\n    /*   console.log(\"Vf2=\", velocity2Final);\r\n          console.log(\"V1f=\", velocity1Final);*/\n\n    var distance = p.dist(p.x1, 200, p.x2, 200); // console.log(distance);\n\n    if (distance <= (p.width1 + p.width2) / 2 + p.remainder && distance <= (p.width1 + p.width2) / 2 - p.remainder || p.DetectCollison) {\n      p.DetectCollison = true;\n      p.x1 += velocity1Final;\n      p.x2 += velocity2Final;\n    } else if (!p.DetectCollison) {\n      p.x1 += p.velocity1Intial;\n      p.x2 += p.velocity2Intial;\n    }\n  };\n\n  var CollisonInelastic = function CollisonInelastic() {\n    var TVelocity = (p.mass1 * p.velocity1Intial + p.mass2 * p.velocity2Intial) / p.TMass;\n    var distance = p.dist(p.x1, 200, p.x2, 200);\n\n    if (distance <= (p.width1 + p.width2) / 2 + p.remainder && distance <= (p.width1 + p.width2) / 2 - p.remainder || p.DetectCollison) {\n      p.DetectCollison = true;\n      p.x1 += TVelocity;\n      p.x2 += TVelocity;\n    }\n\n    if (!p.DetectCollison) {\n      p.x1 += p.velocity1Intial;\n      p.x2 += p.velocity2Intial;\n    }\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\sketch1.js"],"names":["p","velocity1Intial","velocity2Intial","mass1","mass2","TMass","preload","myCustomRedrawAccordingToNewPropsHandler","props","p5Props","start","console","log","height1","Number","height2","width1","width2","ButtonClicked","ButtonClickedR","reset","Inelastic","x1","remainder","windowWidth","x2","DetectCollison","setup","createCanvas","windowHeight","draw","background","CollisionDetectElastic","CollisonInelastic","rectMode","CENTER","fill","rect","velocity2Final","velocity1Final","distance","dist","TVelocity","windowResized","resizeCanvas"],"mappings":"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","sourcesContent":["export default function(p) {\r\n  p.velocity1Intial = 20;\r\n  p.velocity2Intial = -40;\r\n  p.mass1 = 20;\r\n  p.mass2 = 10;\r\n  p.TMass = p.mass1 + p.mass2;\r\n  /*p.height1 = 300;*/\r\n  /*p.height2 = 150;*/\r\n  /*p.width1 = 100;*/\r\n  /*p.width2 = 100;*/\r\n\r\n\r\n  p.preload = () => {\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      if (props.p5Props.start) {\r\n        console.log(p.height1);\r\n        p.height1 = Number(props.p5Props.height1);\r\n        p.height2 = Number(props.p5Props.height2);\r\n        p.width1 = Number(props.p5Props.width1);\r\n        p.width2 = Number(props.p5Props.width2);\r\n        p.ButtonClicked = props.p5Props.start;\r\n        p.ButtonClickedR = props.p5Props.reset;\r\n        p.Inelastic=props.p5Props.Inelastic;\r\n        p.x1 = p.width1 / 2;\r\n        p.remainder =\r\n            ((p.windowWidth/1.5) - p.width2 / 2 - p.width1 / 2) %\r\n            (p.velocity1Intial + -p.velocity2Intial);\r\n        p.x2 = (p.windowWidth/1.5) - p.width2 / 2;\r\n        p.DetectCollison = false;\r\n\r\n\r\n      }\r\n    };\r\n  };\r\n  p.setup = () => {\r\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.background(0);\r\n    if (p.ButtonClicked) {\r\n      if (!p.Inelastic) CollisionDetectElastic();\r\n      else {\r\n        CollisonInelastic();\r\n      }\r\n\r\n      p.rectMode(p.CENTER);\r\n      p.fill(\"green\");\r\n      p.rect(p.x1, 200, p.width1, p.height1, 20);\r\n      p.fill(255, 204, 0);\r\n      p.rect(p.x2, 200, p.width2, p.height2, 20);\r\n    }\r\n  };\r\n\r\n  const CollisionDetectElastic = () => {\r\n    let velocity2Final =\r\n      (2 * p.mass1 * p.velocity1Intial +\r\n        p.velocity2Intial * (p.mass2 - p.mass1)) /\r\n      p.TMass;\r\n    let velocity1Final =\r\n      (2 * p.mass2 * p.velocity2Intial +\r\n        p.velocity1Intial * (p.mass1 - p.mass2)) /\r\n      p.TMass;\r\n\r\n    /*   console.log(\"Vf2=\", velocity2Final);\r\n          console.log(\"V1f=\", velocity1Final);*/\r\n\r\n    let distance = p.dist(p.x1, 200, p.x2, 200);\r\n\r\n    // console.log(distance);\r\n\r\n    if (\r\n      (distance <= (p.width1 + p.width2) / 2 + p.remainder &&\r\n        distance <= (p.width1 + p.width2) / 2 - p.remainder) ||\r\n      p.DetectCollison\r\n    ) {\r\n      p.DetectCollison = true;\r\n      p.x1 += velocity1Final;\r\n      p.x2 += velocity2Final;\r\n    } else if (!p.DetectCollison) {\r\n      p.x1 += p.velocity1Intial;\r\n      p.x2 += p.velocity2Intial;\r\n    }\r\n  };\r\n\r\n  const CollisonInelastic = () => {\r\n    let TVelocity =\r\n      (p.mass1 * p.velocity1Intial + p.mass2 * p.velocity2Intial) / p.TMass;\r\n    let distance = p.dist(p.x1, 200, p.x2, 200);\r\n    if (\r\n      (distance <= (p.width1 + p.width2) / 2 + p.remainder &&\r\n        distance <= (p.width1 + p.width2) / 2 - p.remainder) ||\r\n      p.DetectCollison\r\n    ) {\r\n      p.DetectCollison = true;\r\n      p.x1 += TVelocity;\r\n      p.x2 += TVelocity;\r\n    }\r\n    if (!p.DetectCollison) {\r\n      p.x1 += p.velocity1Intial;\r\n      p.x2 += p.velocity2Intial;\r\n    }\r\n  };\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}