{"ast":null,"code":"export default function (p) {\n  /*  p.ball = {*/\n\n  /*    x: 50,*/\n\n  /*    y: 200,*/\n\n  /*  };*/\n  var reset = function reset() {\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n      if (props.p5Props) {\n        p.ButtonClicked = props.p5Props.start;\n        p.ButtonClickedR = props.p5Props.reset;\n        p.ball.radius = Number(props.p5Props.radius); // also input\n\n        p.ball.xspeed = Number(props.p5Props.xspeed);\n        p.ball.yspeed = -Number(props.p5Props.yspeed);\n        p.Sticky = props.p5Props.Sticky;\n        p.ball.x = props.p5Props.xPos;\n        p.ball.y = props.p5Props.YPos;\n      }\n    };\n  };\n\n  p.preload = function () {\n    reset();\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n    if (p.Sticky) p.background(0);\n  };\n\n  p.draw = function () {\n    if (!p.Sticky) p.background(0);\n    display1();\n\n    if (p.ButtonClicked) {\n      condi_bounce();\n      move();\n    } else if (!p.ButtonClicked && p.ButtonClickedR) {\n      reset();\n    }\n  };\n\n  function display1() {\n    p.stroke(\"white\");\n    p.strokeWeight(4);\n    p.fill(p.random(255), p.random(255), p.random(255));\n    p.ellipse(p.ball.x, p.ball.y, p.ball.radius * 2);\n  }\n\n  function condi_bounce() {\n    if (p.ball.x < 0 || p.ball.x > p.width) {\n      p.ball.xspeed *= -1;\n    }\n\n    if (p.ball.y < 0 || p.ball.y > p.height) {\n      p.ball.yspeed *= -1;\n    }\n  }\n\n  function move() {\n    p.ball.x += p.ball.xspeed;\n    p.ball.y += p.ball.yspeed;\n  }\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\sketch4.js"],"names":["p","reset","myCustomRedrawAccordingToNewPropsHandler","props","p5Props","ButtonClicked","start","ButtonClickedR","ball","radius","Number","xspeed","yspeed","Sticky","x","xPos","y","YPos","preload","setup","createCanvas","windowWidth","windowHeight","background","draw","display1","condi_bounce","move","stroke","strokeWeight","fill","random","ellipse","width","height","windowResized","resizeCanvas"],"mappings":"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","sourcesContent":["export default function(p) {\r\n/*  p.ball = {*/\r\n/*    x: 50,*/\r\n/*    y: 200,*/\r\n/*  };*/\r\n\r\n\r\n  const reset = () => {\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      if (props.p5Props) {\r\n        p.ButtonClicked = props.p5Props.start;\r\n        p.ButtonClickedR = props.p5Props.reset;\r\n        p.ball.radius = Number(props.p5Props.radius); // also input\r\n         p.ball.xspeed=Number(props.p5Props.xspeed);\r\n         p.ball.yspeed=-Number(props.p5Props.yspeed);\r\n         p.Sticky = props.p5Props.Sticky;\r\n         p.ball.x = props.p5Props.xPos;\r\n         p.ball.y = props.p5Props.YPos;\r\n      }\r\n    };\r\n  };\r\n  p.preload = () => {\r\n    reset();\r\n  };\r\n  p.setup = () => {\r\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n    if (p.Sticky) p.background(0);\r\n  };\r\n\r\n  p.draw = () => {\r\n    if (!p.Sticky) p.background(0);\r\n    display1();\r\n    if (p.ButtonClicked) {\r\n      condi_bounce();\r\n      move();\r\n    } else if (!p.ButtonClicked && p.ButtonClickedR) {\r\n      reset();\r\n    }\r\n  };\r\n\r\n  function display1() {\r\n    p.stroke(\"white\");\r\n    p.strokeWeight(4);\r\n    p.fill(p.random(255), p.random(255), p.random(255));\r\n    p.ellipse(p.ball.x, p.ball.y, p.ball.radius * 2);\r\n  }\r\n\r\n  function condi_bounce() {\r\n    if (p.ball.x < 0 || p.ball.x > p.width) {\r\n      p.ball.xspeed *= -1;\r\n    }\r\n    if (p.ball.y < 0 || p.ball.y > p.height) {\r\n      p.ball.yspeed *= -1;\r\n    }\r\n  }\r\n\r\n  function move() {\r\n    p.ball.x += p.ball.xspeed;\r\n    p.ball.y += p.ball.yspeed;\r\n  }\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}