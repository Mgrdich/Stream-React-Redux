{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport http from \"./services/httpService\";\nimport config from \"./services/package.json\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      posts: []\n    };\n    _this.handleAdd =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var obj, _ref2, post, pp;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              obj = {\n                title: \"a\",\n                body: \"b\"\n              };\n              _context.next = 3;\n              return http.post(config.apiEndpoints, obj);\n\n            case 3:\n              _ref2 = _context.sent;\n              post = _ref2.data;\n              //this is for sending data to the server\n              pp = [post].concat(_toConsumableArray(_this.state.posts));\n\n              _this.setState({\n                posts: pp\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleUpdate =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(post) {\n        var posts, index;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                post.title = \"Updated\";\n                _context2.next = 3;\n                return http.put(config.apiEndpoints + '/' + post.id, post);\n\n              case 3:\n                posts = _toConsumableArray(_this.state.posts);\n                index = posts.indexOf(posts);\n                posts[index] = _objectSpread({}, post);\n\n                _this.setState(posts);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDelete =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(post) {\n        var originalPosts, posts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                originalPosts = _this.state.posts;\n                posts = _this.state.posts.filter(function (p) {\n                  return p.id !== post.id;\n                });\n\n                _this.setState({\n                  posts: posts\n                }); //this is the optimistic way we are deleting then we are calling forchnage then\n                //giving the message to the database\n\n\n                _context3.prev = 3;\n                _context3.next = 6;\n                return http.delete(config.apiEndpoints + 'ss/' + post.id);\n\n              case 6:\n                _context3.next = 12;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](3);\n                if (_context3.t0.response && _context3.t0.response.status === 404) alert('this post has already been deleted');\n\n                _this.setState({\n                  posts: originalPosts\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _ref5, posts;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return http.get(config.apiEndpoints);\n\n              case 2:\n                _ref5 = _context4.sent;\n                posts = _ref5.data;\n                //getting elements from server\n                this.setState({\n                  posts: posts\n                });\n                console.log(http.get(config.apiEndpoints));\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.posts.map(function (post) {\n        return React.createElement(\"tr\", {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, post.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-info btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleUpdate(post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Update\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          onClick: function onClick() {\n            return _this2.handleDelete(post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Delete\")));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\App.js"],"names":["React","Component","http","config","ToastContainer","App","state","posts","handleAdd","obj","title","body","post","apiEndpoints","data","pp","setState","handleUpdate","put","id","index","indexOf","handleDelete","originalPosts","filter","p","delete","response","status","alert","get","console","log","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport http from \"./services/httpService\"\nimport config from \"./services/package.json\"\nimport {ToastContainer} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"\n\nclass App extends Component {\n  state = {\n    posts: []\n  };\n\n  handleAdd = async () => {\n    const obj = { title: \"a\", body: \"b\" };\n    const { data: post } = await http.post(config.apiEndpoints, obj); //this is for sending data to the server\n    const pp = [post, ...this.state.posts];\n    this.setState({ posts: pp });\n  };\n\n  handleUpdate = async (post) => {\n    post.title = \"Updated\";\n    await http.put(config.apiEndpoints+'/'+post.id,post);\n    const posts=[...this.state.posts];\n    const index=posts.indexOf(posts);\n    posts[index]={...post};\n    this.setState(posts);\n  };\n\n  handleDelete = async post => {\n    const originalPosts=this.state.posts;\n\n    const posts=this.state.posts.filter((p)=>p.id!==post.id);\n    this.setState({posts});\n//this is the optimistic way we are deleting then we are calling forchnage then\n    //giving the message to the database\n    try {\n    await http.delete(config.apiEndpoints + 'ss/'+post.id);\n      // throw new Error('blig'); to see if out catch will get  back our posts\n\n    } catch (e) {\n      if(e.response && e.response.status===404)\n        alert('this post has already been deleted');\n\n\n      this.setState({posts:originalPosts});\n    }\n  };\n\n  async componentDidMount() {\n    /*const promise=http.get('https://jsonplaceholder.typicode.com/posts');\n    console.log(promise);\n    const respone=await promise;\n    console.log(respone);*/\n    const { data: posts } = await http.get(config.apiEndpoints);//getting elements from server\n    this.setState({ posts });\n    console.log(http.get(config.apiEndpoints));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer/>\n        <button className=\"btn btn-primary\" onClick={this.handleAdd}>\n          Add\n        </button>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Update</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.posts.map(post => (\n              <tr key={post.id}>\n                <td>{post.title}</td>\n                <td>\n                  <button\n                    className=\"btn btn-info btn-sm\"\n                    onClick={() => this.handleUpdate(post)}\n                  >\n                    Update\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => this.handleDelete(post)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}