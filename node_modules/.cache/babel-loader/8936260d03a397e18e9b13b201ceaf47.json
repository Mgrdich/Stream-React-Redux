{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\TableStream.js\";\nimport React, { Component } from 'react';\nimport Table from \"../Reusable/Table\";\n\nvar TableStream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableStream, _Component);\n\n  function TableStream() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableStream);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableStream)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.columns = [{\n      label: \"Title\"\n    }, {\n      label: \"Description\"\n    }];\n    return _this;\n  }\n\n  _createClass(TableStream, [{\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.data); //this proves that we already fetched the data from rhe rest API\n      return React.createElement(Table, {\n        columns: this.columns,\n        data: this.props.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TableStream;\n}(Component);\n\nexport default TableStream;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\TableStream.js"],"names":["React","Component","Table","TableStream","columns","label","props","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;IAEMC,W;;;;;;;;;;;;;;;;;UACNC,O,GAAU,CACN;AAACC,MAAAA,KAAK,EAAC;AAAP,KADM,EAEN;AAACA,MAAAA,KAAK,EAAC;AAAP,KAFM,C;;;;;;6BAOG;AACN;AACC,aACG,oBAAC,KAAD;AACI,QAAA,OAAO,EAAI,KAAKD,OADpB;AAEK,QAAA,IAAI,EAAI,KAAKE,KAAL,CAAWC,IAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAMH;;;;EAhBqBN,S;;AAmB1B,eAAeE,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Table from \"../Reusable/Table\";\r\n\r\nclass TableStream extends Component {\r\ncolumns = [\r\n    {label:\"Title\"},\r\n    {label:\"Description\"}\r\n    ,\r\n];\r\n\r\n\r\n    render() {\r\n       // console.log(this.props.data); //this proves that we already fetched the data from rhe rest API\r\n        return (\r\n           <Table\r\n               columns = {this.columns}\r\n                data = {this.props.data}\r\n           />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableStream;"]},"metadata":{},"sourceType":"module"}