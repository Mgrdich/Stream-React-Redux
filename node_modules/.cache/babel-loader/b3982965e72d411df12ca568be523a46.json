{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\TableStream.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../Reusable/Table\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\nvar TableStream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableStream, _Component);\n\n  function TableStream() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableStream);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableStream)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.columns = [{\n      path: \"title\",\n      label: \"Title\"\n    }, {\n      path: \"description\",\n      label: \"Description\"\n    }, {\n      key: \"Buttons\",\n      content: function content(stream) {\n        if (stream.userId === _this.props.currentUserId) return React.createElement(Link, {\n          to: \"/streams/delete/\".concat(stream.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    }, {\n      key: \"Buttons1\",\n      content: function content(stream) {\n        if (stream.userId === _this.props.currentUserId) return React.createElement(Link, {\n          to: \"/streams/edit/\".concat(stream.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-dark btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Edit\"));\n      }\n    }];\n    return _this;\n  }\n\n  _createClass(TableStream, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.data); //this proves that we already fetched the data from rhe rest API\n      return React.createElement(Table, {\n        columns: this.columns,\n        data: this.props.streams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TableStream;\n}(Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    streams: Object.values(state.STreams),\n    //converting the object to array\n    isSignedIn: state.authReducer.isSignedIn,\n    currentUserId: state.authReducer.userId\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  fetchStreams: fetchStreams\n})(TableStream);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\TableStream.js"],"names":["React","Component","Table","connect","fetchStreams","Link","TableStream","columns","path","label","key","content","stream","userId","props","currentUserId","id","streams","mapStatetoProps","state","Object","values","STreams","isSignedIn","authReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,W;;;;;;;;;;;;;;;;;UAKJC,O,GAAU,CACR;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADQ,EAER;AAAED,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAFQ,EAGR;AACEC,MAAAA,GAAG,EAAE,SADP;AAEEC,MAAAA,OAAO,EAAE,iBAAAC,MAAM,EAAI;AACjB,YAAGA,MAAM,CAACC,MAAP,KAAkB,MAAKC,KAAL,CAAWC,aAAhC,EACA,OACE,oBAAC,IAAD;AAAM,UAAA,EAAE,4BAAqBH,MAAM,CAACI,EAA5B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAMD;AAVH,KAHQ,EAeR;AACEN,MAAAA,GAAG,EAAE,UADP;AAEEC,MAAAA,OAAO,EAAE,iBAAAC,MAAM,EAAI;AACf,YAAGA,MAAM,CAACC,MAAP,KAAkB,MAAKC,KAAL,CAAWC,aAAhC,EACF,OACE,oBAAC,IAAD;AAAM,UAAA,EAAE,0BAAmBH,MAAM,CAACI,EAA1B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD;AATH,KAfQ,C;;;;;;wCAJU;AAClB,WAAKF,KAAL,CAAWV,YAAX;AACD;;;6BA8BQ;AACP;AACA,aAAO,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKG,OAArB;AAA8B,QAAA,IAAI,EAAE,KAAKO,KAAL,CAAWG,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EApCuBhB,S;;AAuC1B,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLF,IAAAA,OAAO,EAAEG,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,OAApB,CADJ;AACkC;AACvCC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBD,UAFzB;AAGLR,IAAAA,aAAa,EAAEI,KAAK,CAACK,WAAN,CAAkBX;AAH5B,GAAP;AAKD,CAND;;AAOA,eAAeV,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA,YAAY,EAAZA;AAAF,CAFoB,CAAP,CAGbE,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"../Reusable/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStreams } from \"../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass TableStream extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchStreams();\r\n  }\r\n\r\n  columns = [\r\n    { path: \"title\", label: \"Title\" },\r\n    { path: \"description\", label: \"Description\" },\r\n    {\r\n      key: \"Buttons\",\r\n      content: stream => {\r\n        if(stream.userId === this.props.currentUserId)\r\n        return (\r\n          <Link to={`/streams/delete/${stream.id}`}>\r\n            <button className=\"btn btn-danger btn-sm\">Delete</button>\r\n          </Link>\r\n        );\r\n\r\n      }\r\n    },\r\n    {\r\n      key: \"Buttons1\",\r\n      content: stream => {\r\n          if(stream.userId === this.props.currentUserId)\r\n        return (\r\n          <Link to={`/streams/edit/${stream.id}`}>\r\n            <button className=\"btn btn-dark btn-sm\">Edit</button>\r\n          </Link>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    // console.log(this.props.data); //this proves that we already fetched the data from rhe rest API\r\n    return <Table columns={this.columns} data={this.props.streams} />;\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    streams: Object.values(state.STreams), //converting the object to array\r\n    isSignedIn: state.authReducer.isSignedIn,\r\n    currentUserId: state.authReducer.userId\r\n  };\r\n};\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { fetchStreams }\r\n)(TableStream);\r\n"]},"metadata":{},"sourceType":"module"}