{"ast":null,"code":"export default function (p) {\n  p.Range = p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta) / p.g;\n\n  p.preload = function () {\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n      if (props.p5Props) {\n        //console.log(props.p5Props);\n        p.ButtonClicked = props.p5Props.start;\n        p.ButtonClickedR = props.p5Props.reset;\n        p.radius = 25; // also input\n\n        p.theta = 45 * Math.PI / 180; //Input\n\n        p.x1 = p.radius;\n        p.y1 = p.windowHeight / 1.5 - p.radius;\n        p.TotalVelocity = 19; //this is tha canvas limit\n\n        p.Vx = p.TotalVelocity * Math.cos(p.theta);\n        p.Vy = p.TotalVelocity * Math.sin(p.theta);\n        p.g = 9.9; // we will let put the variable g as stronger gravity planets\n        //input\n      }\n    };\n  };\n\n  p.windowResized = function () {\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n\n  p.setup = function () {\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\n  };\n\n  p.draw = function () {\n    p.background(0);\n    p.noStroke();\n    p.ellipseMode(p.CENTER);\n    p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\n\n    if (p.ButtonClicked) {\n      ProjectileVector(); //\n    } else if (!p.ButtonClicked && p.ButtonClickedR) {\n      reset();\n    }\n  };\n\n  var reset = function reset() {\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n      if (props.p5Props) {\n        p.ButtonClicked = props.p5Props.start;\n        p.ButtonClickedR = props.p5Props.reset;\n        p.degree = 45;\n        p.theta = p.degree * Math.PI / 180;\n        p.x1 = p.radius;\n        p.y1 = p.windowHeight / 1.5 - p.radius;\n        p.TotalVelocity = 19;\n        p.Vx = p.TotalVelocity * Math.cos(p.theta);\n        p.Vy = p.TotalVelocity * Math.sin(p.theta);\n      }\n    };\n  };\n\n  var ProjectileVector = function ProjectileVector() {\n    if (p.x1 > p.width - p.radius || p.y1 > p.height - p.radius) {\n      p.background(\"blue\");\n      p.Vy = 0;\n      p.Vx = 0;\n    } else {\n      p.x1 += p.Vx;\n      p.Vy = p.Vy - p.g / 60;\n      p.y1 -= p.Vy;\n    } //beacuse our coordinates works in opposite direction\n    //console.log(p.x1,p.y1);\n\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\sketch2.js"],"names":["p","Range","TotalVelocity","Math","sin","theta","g","preload","myCustomRedrawAccordingToNewPropsHandler","props","p5Props","ButtonClicked","start","ButtonClickedR","reset","radius","PI","x1","y1","windowHeight","Vx","cos","Vy","windowResized","resizeCanvas","windowWidth","setup","createCanvas","draw","background","noStroke","ellipseMode","CENTER","ellipse","ProjectileVector","degree","width","height"],"mappings":"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","sourcesContent":["export default function(p) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  p.Range = (p.TotalVelocity * p.TotalVelocity * Math.sin(2 * p.theta)) / p.g;\r\n\r\n  p.preload = () => {\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      if (props.p5Props) {\r\n        //console.log(props.p5Props);\r\n        p.ButtonClicked = props.p5Props.start;\r\n        p.ButtonClickedR = props.p5Props.reset;\r\n        p.radius = 25; // also input\r\n        p.theta = (45 * Math.PI) / 180; //Input\r\n        p.x1 = p.radius;\r\n        p.y1 = p.windowHeight / 1.5 - p.radius;\r\n        p.TotalVelocity = 19; //this is tha canvas limit\r\n        p.Vx = p.TotalVelocity * Math.cos(p.theta);\r\n        p.Vy = p.TotalVelocity * Math.sin(p.theta);\r\n        p.g = 9.9; // we will let put the variable g as stronger gravity planets\r\n//input\r\n      }\r\n    };\r\n  };\r\n\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n  p.setup = () => {\r\n    p.createCanvas(p.windowWidth / 1.5, p.windowHeight / 1.5);\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.background(0);\r\n    p.noStroke();\r\n    p.ellipseMode(p.CENTER);\r\n    p.ellipse(p.x1, p.y1, p.radius * 2, p.radius * 2);\r\n    if (p.ButtonClicked) {\r\n      ProjectileVector();\r\n      //\r\n    } else if (!p.ButtonClicked && p.ButtonClickedR) {\r\n      reset();\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      if (props.p5Props) {\r\n        p.ButtonClicked = props.p5Props.start;\r\n        p.ButtonClickedR = props.p5Props.reset;\r\n        p.degree = 45;\r\n        p.theta = (p.degree * Math.PI) / 180;\r\n        p.x1 = p.radius;\r\n        p.y1 = p.windowHeight / 1.5 - p.radius;\r\n        p.TotalVelocity = 19;\r\n        p.Vx = p.TotalVelocity * Math.cos(p.theta);\r\n        p.Vy = p.TotalVelocity * Math.sin(p.theta);\r\n      }\r\n    };\r\n  };\r\n\r\n  const ProjectileVector = () => {\r\n    if (p.x1 > p.width - p.radius || p.y1 > p.height - p.radius) {\r\n      p.background(\"blue\");\r\n      p.Vy = 0;\r\n      p.Vx = 0;\r\n    } else {\r\n      p.x1 += p.Vx;\r\n      p.Vy = p.Vy - p.g / 60;\r\n      p.y1 -= p.Vy;\r\n    } //beacuse our coordinates works in opposite direction\r\n\r\n    //console.log(p.x1,p.y1);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}