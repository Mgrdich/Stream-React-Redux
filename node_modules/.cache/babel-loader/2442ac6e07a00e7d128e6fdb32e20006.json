{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Component\\\\Simulations.js\";\nimport React from \"react\";\nimport infoSketches from \"../information/MySketches\";\nimport Card from \"../ReusableComp/Card\";\nimport Table from \"../ReusableComp/Table\";\n\nvar Simulations =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Simulations, _React$Component);\n\n  function Simulations() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Simulations);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Simulations)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      SelectedSketch: {},\n      sketches: []\n    };\n    _this.columns = [{\n      label: \"Title\",\n      path: \"title\"\n    }, {\n      label: \"Catagory\",\n      path: \"Catagory\"\n    }, {\n      key: \"Buttons1\",\n      content: function content(item) {\n        return React.createElement(\"button\", {\n          className: _this.state.SelectedSketch === item ? \"btn btn-warning btn-sm\" : \"btn btn-primary btn-sm\",\n          onClick: function onClick() {\n            return _this.handleSelect(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Select\");\n      }\n    }];\n    return _this;\n  }\n\n  _createClass(Simulations, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        SelectedSketch: infoSketches()[0]\n      });\n      this.setState({\n        sketches: infoSketches()\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(item) {\n      this.setState({\n        SelectedSketch: item\n      });\n    }\n  }, {\n    key: \"RenderCard\",\n    value: function RenderCard() {\n      var SelectedSketch = this.state.SelectedSketch;\n      if (Object.keys(SelectedSketch).length > 0) return React.createElement(Card, {\n        data: SelectedSketch,\n        Footer: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });else return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: this.columns,\n        data: this.state.sketches,\n        col: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"m-2 col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.RenderCard())));\n    }\n  }]);\n\n  return Simulations;\n}(React.Component);\n\nexport default Simulations;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Component\\Simulations.js"],"names":["React","infoSketches","Card","Table","Simulations","state","SelectedSketch","sketches","columns","label","path","key","content","item","handleSelect","setState","Object","keys","length","RenderCard","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE,EADV;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;UAURC,O,GAAU,CACR;AACEC,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADQ,EAKR;AACED,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,IAAI,EAAE;AAFR,KALQ,EASR;AACEC,MAAAA,GAAG,EAAE,UADP;AAEEC,MAAAA,OAAO,EAAE,iBAAAC,IAAI,EAAI;AACf,eACE;AACI,UAAA,SAAS,EAAG,MAAKR,KAAL,CAAWC,cAAX,KAA4BO,IAA7B,GAAmC,wBAAnC,GAA4D,wBAD3E;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKC,YAAL,CAAkBD,IAAlB,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD;AAXH,KATQ,C;;;;;;wCANU;AAClB,WAAKE,QAAL,CAAc;AAACT,QAAAA,cAAc,EAACL,YAAY,GAAG,CAAH;AAA5B,OAAd;AACA,WAAKc,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEN,YAAY;AAAxB,OAAd;AAED;;;iCA0BYY,I,EAAM;AACjB,WAAKE,QAAL,CAAc;AAAET,QAAAA,cAAc,EAAEO;AAAlB,OAAd;AACD;;;iCACY;AAAA,UACJP,cADI,GACa,KAAKD,KADlB,CACJC,cADI;AAEX,UAAGU,MAAM,CAACC,IAAP,CAAYX,cAAZ,EAA4BY,MAA5B,GAAmC,CAAtC,EACE,OAAQ,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAGZ,cAAb;AAA6B,QAAA,MAAM,EAAE,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,CADF,KAGE,OAAO,IAAP;AACH;;;6BAEQ;AACP,aACE,0CACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKE,OAArB;AAA8B,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE,QAA/C;AAAyD,QAAA,GAAG,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAGA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKY,UAAL,EADH,CAHA,CADF,CADF;AAWD;;;;EA1DuBnB,KAAK,CAACoB,S;;AA6DhC,eAAehB,WAAf","sourcesContent":["import React from \"react\";\r\nimport infoSketches from \"../information/MySketches\";\r\nimport Card from \"../ReusableComp/Card\";\r\nimport Table from \"../ReusableComp/Table\";\r\n\r\nclass Simulations extends React.Component {\r\n  state = {\r\n    SelectedSketch: {},\r\n    sketches: []\r\n  };\r\n  componentDidMount() {\r\n    this.setState({SelectedSketch:infoSketches()[0]});\r\n    this.setState({ sketches: infoSketches() });\r\n\r\n  }\r\n\r\n  columns = [\r\n    {\r\n      label: \"Title\",\r\n      path: \"title\"\r\n    },\r\n    {\r\n      label: \"Catagory\",\r\n      path: \"Catagory\"\r\n    },\r\n    {\r\n      key: \"Buttons1\",\r\n      content: item => {\r\n        return (\r\n          <button\r\n              className={(this.state.SelectedSketch===item)?\"btn btn-warning btn-sm\":\"btn btn-primary btn-sm\"}\r\n            onClick={() => this.handleSelect(item)}\r\n          >\r\n            Select\r\n          </button>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  handleSelect(item) {\r\n    this.setState({ SelectedSketch: item });\r\n  }\r\n  RenderCard (){\r\n    const {SelectedSketch} =this.state;\r\n    if(Object.keys(SelectedSketch).length>0)\r\n      return (<Card data ={SelectedSketch} Footer={true}/>);\r\n    else\r\n      return null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"row\">\r\n        <Table columns={this.columns} data={this.state.sketches} col={4} />\r\n\r\n        <div className=\"m-2 col\">\r\n          {this.RenderCard()}\r\n        </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Simulations;\r\n"]},"metadata":{},"sourceType":"module"}