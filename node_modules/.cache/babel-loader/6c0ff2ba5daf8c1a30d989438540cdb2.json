{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\StreamShow.js\",\n    _this = this;\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreamShow, _Component);\n\n  function StreamShow() {\n    _classCallCheck(this, StreamShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).apply(this, arguments));\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Mgo\"));\n    }\n  }]);\n\n  return StreamShow;\n}(Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    selected: state.STreams[_this.props.match.params.id]\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\StreamShow.js"],"names":["React","Component","connect","fetchStream","StreamShow","props","match","params","id","mapStatetoProps","state","selected","STreams"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;IAEMC,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,WAAX,CAAuB,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;;6BAEQ;AACP,aACI,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADJ;AAKD;;;;EAXsBP,S;;AAazB,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACDC,IAAAA,QAAQ,EAACD,KAAK,CAACE,OAAN,CAAc,KAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtC;AADR,GAAP;AAGD,CAJD;;AAKA,eAAeN,OAAO,CAACO,eAAD,EAAiB;AAAEN,EAAAA,WAAW,EAAXA;AAAF,CAAjB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\n\r\nclass StreamShow extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          <div>Mgo</div>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n        selected:state.STreams[this.props.match.params.id]\r\n  }\r\n};\r\nexport default connect(mapStatetoProps,{ fetchStream })(StreamShow);\r\n"]},"metadata":{},"sourceType":"module"}