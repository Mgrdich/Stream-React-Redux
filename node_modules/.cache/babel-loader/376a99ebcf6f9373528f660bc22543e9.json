{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\Components\\\\Streams\\\\TableStream.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../Reusable/Table\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\n\nvar TableStream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableStream, _Component);\n\n  function TableStream() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableStream);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableStream)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.columns = [{\n      label: \"Title\"\n    }, {\n      label: \"Description\"\n    }, {\n      key: \"Buttons\",\n      content: function content() {\n        return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          className: \"btn btn-dark btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Edit\"));\n      }\n    }];\n    return _this;\n  }\n\n  _createClass(TableStream, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props.data); //this proves that we already fetched the data from rhe rest API\n      return React.createElement(Table, {\n        columns: this.columns,\n        data: this.props.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TableStream;\n}(Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    streams: Object.values(state.STreams),\n    //converting the object to array\n    isSignedIn: state.authReducer.isSignedIn\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  fetchStreams: fetchStreams\n})(TableStream);","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\Components\\Streams\\TableStream.js"],"names":["React","Component","Table","connect","fetchStreams","TableStream","columns","label","key","content","props","fetchStream","data","mapStatetoProps","state","streams","Object","values","STreams","isSignedIn","authReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;IAEMC,W;;;;;;;;;;;;;;;;;UAMJC,O,GAAU,CACR;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADQ,EAER;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAFQ,EAGR;AACEC,MAAAA,GAAG,EAAE,SADP;AAEEC,MAAAA,OAAO,EAAE,mBAAM;AACb,eACE,0CACE;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;AATH,KAHQ,C;;;;;;wCAJU;AAClB,WAAKC,KAAL,CAAWC,WAAX;AACD;;;6BAkBQ;AACP;AACA,aAAO,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKL,OAArB;AAA8B,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAzBuBX,S;;AA4B1B,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACI,OAApB,CADJ;AACkC;AACvCC,IAAAA,UAAU,EAAEL,KAAK,CAACM,WAAN,CAAkBD;AAFzB,GAAP;AAID,CALD;;AAMA,eAAehB,OAAO,CAClBU,eADkB,EAElB;AAAET,EAAAA,YAAY,EAAZA;AAAF,CAFkB,CAAP,CAGbC,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"../Reusable/Table\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchStreams} from \"../../actions\";\r\n\r\nclass TableStream extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStream();\r\n  }\r\n\r\n  columns = [\r\n    { label: \"Title\" },\r\n    { label: \"Description\" },\r\n    {\r\n      key: \"Buttons\",\r\n      content: () => {\r\n        return (\r\n          <>\r\n            <button className=\"btn btn-dark btn-sm\">Delete</button>\r\n            <button className=\"btn btn-danger btn-sm\">Edit</button>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    // console.log(this.props.data); //this proves that we already fetched the data from rhe rest API\r\n    return <Table columns={this.columns} data={this.props.data} />;\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    streams: Object.values(state.STreams), //converting the object to array\r\n    isSignedIn: state.authReducer.isSignedIn\r\n  };\r\n};\r\nexport default connect(\r\n    mapStatetoProps,\r\n    { fetchStreams }\r\n)(TableStream);\r\n"]},"metadata":{},"sourceType":"module"}