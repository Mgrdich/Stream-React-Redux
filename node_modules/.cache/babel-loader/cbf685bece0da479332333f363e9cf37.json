{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mgo\\\\PhpstormProjects\\\\untitled\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Counters from \"./components/Counters\";\nimport { getCounters } from \"./Services/fakeDataBase\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      counters: getCounters()\n    };\n\n    _this.handleReset = function () {\n      var counters = _this.state.counters.map(function (c) {\n        c.value = 0;\n        return c;\n      });\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    _this.handleIncrement = function (counter) {\n      var counters1 = _toConsumableArray(_this.state.counters);\n\n      var index = counters1.indexOf(counter); //we should never change the state directly we should let react the changing\n      //so we are creating this new array and changing it then\n\n      counters1[index] = _objectSpread({}, counter); //console.log(this.state.counters[index]);\n\n      if (counters1[index].value < 10) counters1[index].value++;\n\n      _this.setState({\n        counters: counters1\n      });\n    };\n\n    _this.handleDecrement = function (counter) {\n      var newarray = _toConsumableArray(_this.state.counters); //here are spreading the contents\n      //of the counters array so that we do not change it\n\n\n      var index = newarray.indexOf(counter); //finding the index of\n\n      if (newarray[index].value > 0) {\n        newarray[index].value--;\n\n        _this.setState({\n          counters: newarray\n        });\n      }\n    };\n\n    _this.handleAdd = function () {\n      var yergar = _this.state.counters;\n      var newarray = []; //console.log(\"Id:\",yergar[yergar.length-1].id);\n\n      if (yergar.length > 0) {\n        var ourid = yergar[yergar.length - 1].id + 1;\n        newarray = [].concat(_toConsumableArray(_this.state.counters), [{\n          id: ourid,\n          value: 1,\n          liked: false\n        }]);\n      } else newarray = [{\n        id: 0,\n        value: 1,\n        liked: false\n      }];\n\n      _this.setState({\n        counters: newarray\n      });\n    };\n\n    _this.handleDeleteAll = function () {\n      var array = _toConsumableArray(_this.state.counters);\n\n      array.length = 0; //deleting the array\n      //console.log(\"array:\"+ array);\n\n      _this.setState({\n        counters: array\n      });\n    };\n\n    _this.ChangeLike = function (counter) {\n      //the error is here\n      var newarray = _toConsumableArray(_this.state.counters);\n\n      var index = newarray.indexOf(counter);\n      newarray[index].liked = !newarray[index].liked;\n\n      _this.setState({\n        counters: newarray\n      });\n    };\n\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"alert alert-info \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Welcome to React\")), React.createElement(Navbar, {\n        counters: this.state.counters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(Counters, {\n        onReset: this.handleReset,\n        onAdd: this.handleAdd,\n        onDeleteAll: this.handleDeleteAll,\n        onDelete: this.handleDelete,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        counters: this.state.counters,\n        onLiked: this.ChangeLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(counterId) {\n      //counter id to know which one to remove\n      var counters = this.state.counters.filter(function (c) {\n        return c.id !== counterId;\n      }); //we are filtering getting all that is not equal to that id\n      //putting it to the filter const then letting the react do the\n      //we did create this new counters\n      //console.log({ counters: counters });\n\n      this.setState({\n        counters: counters\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Mgo\\PhpstormProjects\\untitled\\src\\App.js"],"names":["React","Component","Navbar","Counters","getCounters","App","state","counters","handleReset","map","c","value","setState","handleIncrement","counter","counters1","index","indexOf","handleDecrement","newarray","handleAdd","yergar","length","ourid","id","liked","handleDeleteAll","array","ChangeLike","handleDelete","bind","counterId","filter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Counters from \"./components/Counters\";\r\nimport {getCounters} from \"./Services/fakeDataBase\"\r\n\r\nclass App extends Component {\r\n  state = {\r\n    counters: getCounters()\r\n  };\r\n  constructor() {\r\n    super();\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <center>\r\n          <h1 className=\"alert alert-info \">Welcome to React</h1>\r\n        </center>\r\n        <Navbar counters={this.state.counters} />\r\n        <Counters\r\n          onReset={this.handleReset}\r\n          onAdd={this.handleAdd}\r\n          onDeleteAll={this.handleDeleteAll}\r\n          onDelete={this.handleDelete}\r\n          onIncrement={this.handleIncrement}\r\n          onDecrement={this.handleDecrement}\r\n          counters={this.state.counters}\r\n          onLiked={this.ChangeLike}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  handleDelete(counterId) {\r\n    //counter id to know which one to remove\r\n    const counters = this.state.counters.filter(c => c.id !== counterId);\r\n    //we are filtering getting all that is not equal to that id\r\n    //putting it to the filter const then letting the react do the\r\n    //we did create this new counters\r\n    //console.log({ counters: counters });\r\n    this.setState({ counters: counters });\r\n  }\r\n  handleReset = () => {\r\n    const counters = this.state.counters.map(c => {\r\n      c.value = 0;\r\n      return c;\r\n    });\r\n    this.setState({ counters: counters });\r\n  };\r\n  handleIncrement = counter => {\r\n    const counters1 = [...this.state.counters];\r\n    const index = counters1.indexOf(counter);\r\n    //we should never change the state directly we should let react the changing\r\n    //so we are creating this new array and changing it then\r\n    counters1[index] = { ...counter };\r\n    //console.log(this.state.counters[index]);\r\n    if (counters1[index].value < 10) counters1[index].value++;\r\n    this.setState({ counters: counters1 });\r\n  };\r\n  handleDecrement = counter => {\r\n    const newarray = [...this.state.counters]; //here are spreading the contents\r\n    //of the counters array so that we do not change it\r\n    const index = newarray.indexOf(counter); //finding the index of\r\n    if (newarray[index].value > 0) {\r\n      newarray[index].value--;\r\n      this.setState({ counters: newarray });\r\n    }\r\n  };\r\n  handleAdd = () => {\r\n    let yergar = this.state.counters;\r\n    let newarray = [];\r\n    //console.log(\"Id:\",yergar[yergar.length-1].id);\r\n    if (yergar.length > 0) {\r\n      let ourid = yergar[yergar.length - 1].id + 1;\r\n      newarray = [...this.state.counters, { id: ourid, value: 1,liked:false }];\r\n    } else newarray = [{ id: 0, value: 1 ,liked:false}];\r\n    this.setState({ counters: newarray });\r\n  };\r\n\r\n  handleDeleteAll = () => {\r\n    let array = [...this.state.counters];\r\n    array.length = 0; //deleting the array\r\n    //console.log(\"array:\"+ array);\r\n    this.setState({ counters: array });\r\n  };\r\n  ChangeLike=(counter)=>{//the error is here\r\n\r\n    let newarray=[...this.state.counters];\r\n    let index=newarray.indexOf(counter);\r\n    newarray[index].liked=!newarray[index].liked;\r\n    this.setState({counters:newarray});\r\n  };\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}